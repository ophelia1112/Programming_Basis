{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f136c7e0-8eac-479b-8e1d-4d6e63e59a0a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     编号         单词       释义\n",
      "0     1    abandon    放弃；遗弃\n",
      "1     2    ability    能力；才能\n",
      "2     3     absorb    吸收；吸引\n",
      "3     4   abundant  丰富的；充裕的\n",
      "4     5     access   接近；使用权\n",
      "..  ...        ...      ...\n",
      "95   96   convince   说服；使信服\n",
      "96   97  cooperate    合作；协作\n",
      "97   98     create    创造；创建\n",
      "98   99   critical  批评的；关键的\n",
      "99  100    culture    文化；教养\n",
      "\n",
      "[100 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "# 重点关注格式处理提取\n",
    "import pandas as pd\n",
    "import re # 正则表达式\n",
    "\n",
    "# 定义一个列表来存储每一行的单词和释义\n",
    "data = []\n",
    "\n",
    "# 打开并读取文本文件\n",
    "with open('原始单词文件.txt', 'r', encoding='utf-8') as f:\n",
    "    lines = f.readlines()\n",
    "\n",
    "    # 处理每一行数据\n",
    "    for line in lines:\n",
    "        # 使用正则表达式匹配编号、单词和释义\n",
    "        match = re.match(r'(\\d+)\\.\\s\\*\\*(.*?)\\*\\*\\s-\\s(.+)', line)\n",
    "        if match:\n",
    "            # 提取编号、单词、释义\n",
    "            number = match.group(1)\n",
    "            word = match.group(2)\n",
    "            meaning = match.group(3)\n",
    "            data.append([number, word, meaning])\n",
    "\n",
    "# 用pandas构建DataFrame\n",
    "df = pd.DataFrame(data, columns=['编号', '单词', '释义'])\n",
    "\n",
    "# 查看前几行数据\n",
    "print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eada312c-38a6-42eb-88e1-74a5a32207e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>单词</th>\n",
       "      <th>释义</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>abandon</td>\n",
       "      <td>放弃；遗弃</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ability</td>\n",
       "      <td>能力；才能</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>absorb</td>\n",
       "      <td>吸收；吸引</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>abundant</td>\n",
       "      <td>丰富的；充裕的</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>access</td>\n",
       "      <td>接近；使用权</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>convince</td>\n",
       "      <td>说服；使信服</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>cooperate</td>\n",
       "      <td>合作；协作</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>create</td>\n",
       "      <td>创造；创建</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>critical</td>\n",
       "      <td>批评的；关键的</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>culture</td>\n",
       "      <td>文化；教养</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           单词       释义\n",
       "0     abandon    放弃；遗弃\n",
       "1     ability    能力；才能\n",
       "2      absorb    吸收；吸引\n",
       "3    abundant  丰富的；充裕的\n",
       "4      access   接近；使用权\n",
       "..        ...      ...\n",
       "95   convince   说服；使信服\n",
       "96  cooperate    合作；协作\n",
       "97     create    创造；创建\n",
       "98   critical  批评的；关键的\n",
       "99    culture    文化；教养\n",
       "\n",
       "[100 rows x 2 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_need=df[['单词','释义']]\n",
    "df_need"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e08166b7-1e41-44dd-83a6-9232ff5aaacb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 保存为 CSV 文件，不包含索引\n",
    "df_need.to_csv('处理后单词加释义txt', index=False, encoding='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "535d96c3-f8e7-4c92-a6ed-0457b26b7ee1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>单词</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>abandon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ability</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>absorb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>abundant</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>access</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>convince</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>cooperate</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>create</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>critical</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>culture</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           单词\n",
       "0     abandon\n",
       "1     ability\n",
       "2      absorb\n",
       "3    abundant\n",
       "4      access\n",
       "..        ...\n",
       "95   convince\n",
       "96  cooperate\n",
       "97     create\n",
       "98   critical\n",
       "99    culture\n",
       "\n",
       "[100 rows x 1 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_word=df_need[['单词']]\n",
    "df_word"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2eb03e29-5042-4b39-9fbd-309485f736c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_word.to_csv('处理后只有单词.txt',index=False,encoding='utf8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7271637a-f21f-4f7b-a1b4-cf1389c48766",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": "",
   "id": "b96da53a6ec4d050"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
