{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3396eac4-e33e-4961-8757-e5ba80803d18",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 知识点一、时间计算"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3f4ac23e-54a8-4f38-94c2-d17e08f5cf99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2021-10-10', '2021-10-11', '2021-10-12', '2021-10-13',\n",
       "               '2021-10-14', '2021-10-15', '2021-10-16', '2021-10-17',\n",
       "               '2021-10-18', '2021-10-19', '2021-10-20', '2021-10-21',\n",
       "               '2021-10-22', '2021-10-23', '2021-10-24', '2021-10-25',\n",
       "               '2021-10-26', '2021-10-27', '2021-10-28', '2021-10-29',\n",
       "               '2021-10-30', '2021-10-31'],\n",
       "              dtype='datetime64[ns]', freq='D')"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 生成一个月份中的所有天数\n",
    "import pandas as pd\n",
    "date_range=pd.date_range(start='2021-10-10',end='2021-10-31')\n",
    "# 第二种方法、date_range=pd.date_range(start='2021-10-10',periods=31)\n",
    "date_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "badebef4-ac1b-4f02-bf02-b0a948475e04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2024-01-01', '2024-01-08', '2024-01-15', '2024-01-22',\n",
       "               '2024-01-29', '2024-02-05', '2024-02-12', '2024-02-19',\n",
       "               '2024-02-26', '2024-03-04', '2024-03-11', '2024-03-18',\n",
       "               '2024-03-25', '2024-04-01', '2024-04-08', '2024-04-15',\n",
       "               '2024-04-22', '2024-04-29', '2024-05-06', '2024-05-13',\n",
       "               '2024-05-20', '2024-05-27', '2024-06-03', '2024-06-10',\n",
       "               '2024-06-17', '2024-06-24', '2024-07-01', '2024-07-08',\n",
       "               '2024-07-15', '2024-07-22', '2024-07-29', '2024-08-05',\n",
       "               '2024-08-12', '2024-08-19', '2024-08-26', '2024-09-02',\n",
       "               '2024-09-09', '2024-09-16', '2024-09-23', '2024-09-30',\n",
       "               '2024-10-07', '2024-10-14', '2024-10-21', '2024-10-28',\n",
       "               '2024-11-04', '2024-11-11', '2024-11-18', '2024-11-25',\n",
       "               '2024-12-02', '2024-12-09', '2024-12-16', '2024-12-23',\n",
       "               '2024-12-30'],\n",
       "              dtype='datetime64[ns]', freq='W-MON')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 生成一年中所有周一日期\n",
    "import pandas as pd\n",
    "date_range=pd.date_range(start='2024-01-01',end='2024-12-31',freq='W-MON')\n",
    "# date_range=pd.date_range(start='2024-01-01',periods=52,freq='W-MON')\n",
    "date_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2828618b-ee9d-48cb-a890-a54c1db9d316",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2024-01-01 00:00:00', '2024-01-01 01:00:00',\n",
       "               '2024-01-01 02:00:00', '2024-01-01 03:00:00',\n",
       "               '2024-01-01 04:00:00', '2024-01-01 05:00:00',\n",
       "               '2024-01-01 06:00:00', '2024-01-01 07:00:00',\n",
       "               '2024-01-01 08:00:00', '2024-01-01 09:00:00',\n",
       "               '2024-01-01 10:00:00', '2024-01-01 11:00:00'],\n",
       "              dtype='datetime64[ns]', freq='h')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 生成一天中所有小时\n",
    "import pandas as pd\n",
    "date_range=pd.date_range(start='2024-01-01',periods=12,freq='h')\n",
    "# date_range=pd.date_range(start='2024-01-01',end='2014-01-02',freq='h',close='left')\n",
    "date_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "81d71531-98cf-49b5-8201-c4a87a66e50b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>day_of_year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-10-02</td>\n",
       "      <td>275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-10-03</td>\n",
       "      <td>276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-10-04</td>\n",
       "      <td>277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-10-05</td>\n",
       "      <td>278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2021-10-06</td>\n",
       "      <td>279</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2021-10-07</td>\n",
       "      <td>280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2021-10-08</td>\n",
       "      <td>281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2021-10-09</td>\n",
       "      <td>282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2021-10-10</td>\n",
       "      <td>283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2021-10-11</td>\n",
       "      <td>284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2021-10-12</td>\n",
       "      <td>285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2021-10-13</td>\n",
       "      <td>286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2021-10-14</td>\n",
       "      <td>287</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2021-10-15</td>\n",
       "      <td>288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2021-10-16</td>\n",
       "      <td>289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2021-10-17</td>\n",
       "      <td>290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2021-10-18</td>\n",
       "      <td>291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2021-10-19</td>\n",
       "      <td>292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2021-10-20</td>\n",
       "      <td>293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2021-10-21</td>\n",
       "      <td>294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2021-10-22</td>\n",
       "      <td>295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2021-10-23</td>\n",
       "      <td>296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2021-10-24</td>\n",
       "      <td>297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2021-10-25</td>\n",
       "      <td>298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2021-10-26</td>\n",
       "      <td>299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2021-10-27</td>\n",
       "      <td>300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2021-10-28</td>\n",
       "      <td>301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2021-10-29</td>\n",
       "      <td>302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2021-10-30</td>\n",
       "      <td>303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2021-10-31</td>\n",
       "      <td>304</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          day  day_of_year\n",
       "0  2021-10-01          274\n",
       "1  2021-10-02          275\n",
       "2  2021-10-03          276\n",
       "3  2021-10-04          277\n",
       "4  2021-10-05          278\n",
       "5  2021-10-06          279\n",
       "6  2021-10-07          280\n",
       "7  2021-10-08          281\n",
       "8  2021-10-09          282\n",
       "9  2021-10-10          283\n",
       "10 2021-10-11          284\n",
       "11 2021-10-12          285\n",
       "12 2021-10-13          286\n",
       "13 2021-10-14          287\n",
       "14 2021-10-15          288\n",
       "15 2021-10-16          289\n",
       "16 2021-10-17          290\n",
       "17 2021-10-18          291\n",
       "18 2021-10-19          292\n",
       "19 2021-10-20          293\n",
       "20 2021-10-21          294\n",
       "21 2021-10-22          295\n",
       "22 2021-10-23          296\n",
       "23 2021-10-24          297\n",
       "24 2021-10-25          298\n",
       "25 2021-10-26          299\n",
       "26 2021-10-27          300\n",
       "27 2021-10-28          301\n",
       "28 2021-10-29          302\n",
       "29 2021-10-30          303\n",
       "30 2021-10-31          304"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 生成日期与年度对应的DataFrame\n",
    "import pandas as pd\n",
    "date_range=pd.date_range(start='2021-10-01',periods=31)\n",
    "df=pd.DataFrame(data=date_range,columns=['day'])\n",
    "df['day_of_year']=df['day'].dt.dayofyear\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7e505a9f-994a-4663-92ca-9f12522da41f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>norm</th>\n",
       "      <th>uniform</th>\n",
       "      <th>binomial</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-01-01</th>\n",
       "      <td>1.030508</td>\n",
       "      <td>0.196241</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-01-02</th>\n",
       "      <td>0.014620</td>\n",
       "      <td>0.106815</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-01-03</th>\n",
       "      <td>1.107549</td>\n",
       "      <td>0.527961</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-01-04</th>\n",
       "      <td>-0.656787</td>\n",
       "      <td>0.810977</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-01-05</th>\n",
       "      <td>-0.846017</td>\n",
       "      <td>0.675132</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026-09-22</th>\n",
       "      <td>-0.746550</td>\n",
       "      <td>0.033140</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026-09-23</th>\n",
       "      <td>-1.510709</td>\n",
       "      <td>0.776766</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026-09-24</th>\n",
       "      <td>1.336797</td>\n",
       "      <td>0.472125</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026-09-25</th>\n",
       "      <td>-0.153197</td>\n",
       "      <td>0.818048</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2026-09-26</th>\n",
       "      <td>-1.651714</td>\n",
       "      <td>0.516251</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                norm   uniform  binomial\n",
       "2024-01-01  1.030508  0.196241         1\n",
       "2024-01-02  0.014620  0.106815         0\n",
       "2024-01-03  1.107549  0.527961         0\n",
       "2024-01-04 -0.656787  0.810977         0\n",
       "2024-01-05 -0.846017  0.675132         0\n",
       "...              ...       ...       ...\n",
       "2026-09-22 -0.746550  0.033140         0\n",
       "2026-09-23 -1.510709  0.776766         0\n",
       "2026-09-24  1.336797  0.472125         0\n",
       "2026-09-25 -0.153197  0.818048         0\n",
       "2026-09-26 -1.651714  0.516251         0\n",
       "\n",
       "[1000 rows x 3 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 使用日期与随机数生成DataFrame\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "date_range=pd.date_range(start='2024-01-01',periods=1000)\n",
    "data={\n",
    "    'norm':np.random.normal(loc=0,scale=1,size=1000),\n",
    "    'uniform':np.random.uniform(low=0,high=1,size=1000),\n",
    "    'binomial':np.random.binomial(n=1,p=0.2,size=1000)\n",
    "}\n",
    "df=pd.DataFrame(data=data,index=date_range)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "936f575a-2e07-4e2c-8940-562bb4e8aa2c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "257a872b-f00b-4353-94d8-3ffb58e0a5e4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "55618ebb-8998-4c09-8a07-41c14b122f1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 知识点二、数据信息"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ec11f181-531d-45a1-9b31-0130071ee021",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 信息统计：整体信息df.info()  描述性统计df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3da0cd63-fa9c-4757-9a80-f0bb674f2446",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 统计数据列值出现的次数：pd.Series.value_counts()  统计列里面的各个值出现次数df[''].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa7a1fe7-e5a3-4275-b730-badcec36c277",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ae350a0d-f6c6-46a2-aafc-e0273c4201c0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "feeace4a-182e-4a98-87e4-0fd94f4d995f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 实战案例一、股票数据探索"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "74e8dce2-72e8-4b06-bea2-1ee94212d712",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>456.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>453.800</td>\n",
       "      <td>461.400</td>\n",
       "      <td>17335451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-29</th>\n",
       "      <td>461.600</td>\n",
       "      <td>465.000</td>\n",
       "      <td>450.200</td>\n",
       "      <td>465.000</td>\n",
       "      <td>18250450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-28</th>\n",
       "      <td>467.000</td>\n",
       "      <td>476.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>469.800</td>\n",
       "      <td>20947276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-27</th>\n",
       "      <td>459.000</td>\n",
       "      <td>473.000</td>\n",
       "      <td>455.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>17966998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-24</th>\n",
       "      <td>461.400</td>\n",
       "      <td>473.400</td>\n",
       "      <td>456.200</td>\n",
       "      <td>460.200</td>\n",
       "      <td>16656914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-23</th>\n",
       "      <td>4.050</td>\n",
       "      <td>4.450</td>\n",
       "      <td>4.025</td>\n",
       "      <td>4.425</td>\n",
       "      <td>55016000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-21</th>\n",
       "      <td>4.125</td>\n",
       "      <td>4.125</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.000</td>\n",
       "      <td>22817000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-18</th>\n",
       "      <td>4.200</td>\n",
       "      <td>4.250</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.025</td>\n",
       "      <td>36598000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-17</th>\n",
       "      <td>4.150</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.225</td>\n",
       "      <td>83801500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-16</th>\n",
       "      <td>4.375</td>\n",
       "      <td>4.625</td>\n",
       "      <td>4.075</td>\n",
       "      <td>4.150</td>\n",
       "      <td>439775000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4267 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Open     High      Low    Close     Volume\n",
       "Date                                                     \n",
       "2021-09-30  456.000  464.600  453.800  461.400   17335451\n",
       "2021-09-29  461.600  465.000  450.200  465.000   18250450\n",
       "2021-09-28  467.000  476.200  464.600  469.800   20947276\n",
       "2021-09-27  459.000  473.000  455.200  464.600   17966998\n",
       "2021-09-24  461.400  473.400  456.200  460.200   16656914\n",
       "...             ...      ...      ...      ...        ...\n",
       "2004-06-23    4.050    4.450    4.025    4.425   55016000\n",
       "2004-06-21    4.125    4.125    3.950    4.000   22817000\n",
       "2004-06-18    4.200    4.250    3.950    4.025   36598000\n",
       "2004-06-17    4.150    4.375    4.125    4.225   83801500\n",
       "2004-06-16    4.375    4.625    4.075    4.150  439775000\n",
       "\n",
       "[4267 rows x 5 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 加载数据\n",
    "import pandas as pd\n",
    "df=pd.read_csv('ant-exercises-pandas-master/datas/00700.HK.csv',index_col=0)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3c7056a6-4345-43c4-a4fd-b57954b9b74e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 4267 entries, 2021-09-30 to 2004-06-16\n",
      "Data columns (total 5 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   Open    4267 non-null   float64\n",
      " 1   High    4267 non-null   float64\n",
      " 2   Low     4267 non-null   float64\n",
      " 3   Close   4267 non-null   float64\n",
      " 4   Volume  4267 non-null   int64  \n",
      "dtypes: float64(4), int64(1)\n",
      "memory usage: 200.0+ KB\n"
     ]
    }
   ],
   "source": [
    "# 基本数据统计\n",
    "# 数据特征\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "52addb1b-58e8-4689-b461-dfe0bf733cfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4267.000000</td>\n",
       "      <td>4267.000000</td>\n",
       "      <td>4267.000000</td>\n",
       "      <td>4267.000000</td>\n",
       "      <td>4.267000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>211.010729</td>\n",
       "      <td>213.575773</td>\n",
       "      <td>208.063849</td>\n",
       "      <td>210.778935</td>\n",
       "      <td>1.198943e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>170.116303</td>\n",
       "      <td>172.173404</td>\n",
       "      <td>167.716394</td>\n",
       "      <td>169.807145</td>\n",
       "      <td>1.413407e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>3.375000</td>\n",
       "      <td>4.523670e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>58.000000</td>\n",
       "      <td>59.200000</td>\n",
       "      <td>56.050000</td>\n",
       "      <td>57.500000</td>\n",
       "      <td>3.600698e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>170.900000</td>\n",
       "      <td>173.300000</td>\n",
       "      <td>168.000000</td>\n",
       "      <td>170.700000</td>\n",
       "      <td>7.647284e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>330.700000</td>\n",
       "      <td>333.100000</td>\n",
       "      <td>326.500000</td>\n",
       "      <td>330.000000</td>\n",
       "      <td>1.726551e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>767.000000</td>\n",
       "      <td>775.500000</td>\n",
       "      <td>751.500000</td>\n",
       "      <td>766.500000</td>\n",
       "      <td>4.397750e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Open         High          Low        Close        Volume\n",
       "count  4267.000000  4267.000000  4267.000000  4267.000000  4.267000e+03\n",
       "mean    211.010729   213.575773   208.063849   210.778935  1.198943e+07\n",
       "std     170.116303   172.173404   167.716394   169.807145  1.413407e+07\n",
       "min       3.375000     3.500000     3.375000     3.375000  4.523670e+05\n",
       "25%      58.000000    59.200000    56.050000    57.500000  3.600698e+06\n",
       "50%     170.900000   173.300000   168.000000   170.700000  7.647284e+06\n",
       "75%     330.700000   333.100000   326.500000   330.000000  1.726551e+07\n",
       "max     767.000000   775.500000   751.500000   766.500000  4.397750e+08"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 数据的描述性特征\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5b4b6de1-7d5c-4bd4-b548-760fcfdb309e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>456.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>453.800</td>\n",
       "      <td>461.400</td>\n",
       "      <td>17335451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-09-29</td>\n",
       "      <td>461.600</td>\n",
       "      <td>465.000</td>\n",
       "      <td>450.200</td>\n",
       "      <td>465.000</td>\n",
       "      <td>18250450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-09-28</td>\n",
       "      <td>467.000</td>\n",
       "      <td>476.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>469.800</td>\n",
       "      <td>20947276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-09-27</td>\n",
       "      <td>459.000</td>\n",
       "      <td>473.000</td>\n",
       "      <td>455.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>17966998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>461.400</td>\n",
       "      <td>473.400</td>\n",
       "      <td>456.200</td>\n",
       "      <td>460.200</td>\n",
       "      <td>16656914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4262</th>\n",
       "      <td>2004-06-23</td>\n",
       "      <td>4.050</td>\n",
       "      <td>4.450</td>\n",
       "      <td>4.025</td>\n",
       "      <td>4.425</td>\n",
       "      <td>55016000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263</th>\n",
       "      <td>2004-06-21</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.125</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.000</td>\n",
       "      <td>22817000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264</th>\n",
       "      <td>2004-06-18</td>\n",
       "      <td>4.200</td>\n",
       "      <td>4.250</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.025</td>\n",
       "      <td>36598000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4265</th>\n",
       "      <td>2004-06-17</td>\n",
       "      <td>4.150</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.225</td>\n",
       "      <td>83801500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4266</th>\n",
       "      <td>2004-06-16</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.625</td>\n",
       "      <td>4.075</td>\n",
       "      <td>4.150</td>\n",
       "      <td>439775000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4267 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date     Open     High      Low    Close     Volume\n",
       "0     2021-09-30  456.000  464.600  453.800  461.400   17335451\n",
       "1     2021-09-29  461.600  465.000  450.200  465.000   18250450\n",
       "2     2021-09-28  467.000  476.200  464.600  469.800   20947276\n",
       "3     2021-09-27  459.000  473.000  455.200  464.600   17966998\n",
       "4     2021-09-24  461.400  473.400  456.200  460.200   16656914\n",
       "...          ...      ...      ...      ...      ...        ...\n",
       "4262  2004-06-23    4.050    4.450    4.025    4.425   55016000\n",
       "4263  2004-06-21    4.125    4.125    3.950    4.000   22817000\n",
       "4264  2004-06-18    4.200    4.250    3.950    4.025   36598000\n",
       "4265  2004-06-17    4.150    4.375    4.125    4.225   83801500\n",
       "4266  2004-06-16    4.375    4.625    4.075    4.150  439775000\n",
       "\n",
       "[4267 rows x 6 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 更改索引为普通数据列\n",
    "df.reset_index(inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "814ad325-8732-4c33-987a-68c1f28ea78d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>456.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>453.800</td>\n",
       "      <td>461.400</td>\n",
       "      <td>17335451</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-09-29</td>\n",
       "      <td>461.600</td>\n",
       "      <td>465.000</td>\n",
       "      <td>450.200</td>\n",
       "      <td>465.000</td>\n",
       "      <td>18250450</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-09-28</td>\n",
       "      <td>467.000</td>\n",
       "      <td>476.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>469.800</td>\n",
       "      <td>20947276</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-09-27</td>\n",
       "      <td>459.000</td>\n",
       "      <td>473.000</td>\n",
       "      <td>455.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>17966998</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>461.400</td>\n",
       "      <td>473.400</td>\n",
       "      <td>456.200</td>\n",
       "      <td>460.200</td>\n",
       "      <td>16656914</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4262</th>\n",
       "      <td>2004-06-23</td>\n",
       "      <td>4.050</td>\n",
       "      <td>4.450</td>\n",
       "      <td>4.025</td>\n",
       "      <td>4.425</td>\n",
       "      <td>55016000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263</th>\n",
       "      <td>2004-06-21</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.125</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.000</td>\n",
       "      <td>22817000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264</th>\n",
       "      <td>2004-06-18</td>\n",
       "      <td>4.200</td>\n",
       "      <td>4.250</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.025</td>\n",
       "      <td>36598000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4265</th>\n",
       "      <td>2004-06-17</td>\n",
       "      <td>4.150</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.225</td>\n",
       "      <td>83801500</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4266</th>\n",
       "      <td>2004-06-16</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.625</td>\n",
       "      <td>4.075</td>\n",
       "      <td>4.150</td>\n",
       "      <td>439775000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4267 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date     Open     High      Low    Close     Volume  Year  Month\n",
       "0    2021-09-30  456.000  464.600  453.800  461.400   17335451  2021      9\n",
       "1    2021-09-29  461.600  465.000  450.200  465.000   18250450  2021      9\n",
       "2    2021-09-28  467.000  476.200  464.600  469.800   20947276  2021      9\n",
       "3    2021-09-27  459.000  473.000  455.200  464.600   17966998  2021      9\n",
       "4    2021-09-24  461.400  473.400  456.200  460.200   16656914  2021      9\n",
       "...         ...      ...      ...      ...      ...        ...   ...    ...\n",
       "4262 2004-06-23    4.050    4.450    4.025    4.425   55016000  2004      6\n",
       "4263 2004-06-21    4.125    4.125    3.950    4.000   22817000  2004      6\n",
       "4264 2004-06-18    4.200    4.250    3.950    4.025   36598000  2004      6\n",
       "4265 2004-06-17    4.150    4.375    4.125    4.225   83801500  2004      6\n",
       "4266 2004-06-16    4.375    4.625    4.075    4.150  439775000  2004      6\n",
       "\n",
       "[4267 rows x 8 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 给数据新增年份与月份——根据日期得到月份与年份（从已有数据中获取数据）\n",
    "# 首先转换为日期格式，转换完之后可以用dt访问很多属性\n",
    "df['Date']=pd.to_datetime(df['Date'])\n",
    "# 添加新列\n",
    "df['Year']=df['Date'].dt.year\n",
    "df['Month']=df['Date'].dt.month\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "52aba3a5-4c0c-4f6d-a378-e1b07a4cb173",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year\n",
       "2004      4.338686\n",
       "2005      6.568927\n",
       "2006     15.865951\n",
       "2007     37.882724\n",
       "2008     54.818367\n",
       "2009     96.369679\n",
       "2010    157.299598\n",
       "2011    189.737398\n",
       "2012    228.987045\n",
       "2013    337.136066\n",
       "2014    271.291498\n",
       "2015    144.824291\n",
       "2016    176.562041\n",
       "2017    291.066667\n",
       "2018    372.678862\n",
       "2019    346.225203\n",
       "2020    479.141129\n",
       "2021    586.649189\n",
       "Name: Close, dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 计算每年的平均收盘价（按照日期划分）——分组聚合统计求平均值\n",
    "df.groupby('Year')['Close'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "15d2924c-c3e6-45c5-a761-7204a94956f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date      2004-07-26 00:00:00\n",
       "Open                     3.45\n",
       "High                      3.5\n",
       "Low                     3.375\n",
       "Close                   3.375\n",
       "Volume                7439000\n",
       "Year                     2004\n",
       "Month                       7\n",
       "Name: 4240, dtype: object"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 收盘价最低数据行\n",
    "df['Close'].min()\n",
    "# 返回最小值所在的行的索引\n",
    "df['Close'].argmin()\n",
    "# 最小数据所在行的索引用来查询行数据\n",
    "df.loc[df['Close'].argmin()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3094c185-a4b7-4b81-875d-72e82e4c65ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-09-30</td>\n",
       "      <td>456.000</td>\n",
       "      <td>461.400</td>\n",
       "      <td>17335451</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-09-29</td>\n",
       "      <td>461.600</td>\n",
       "      <td>465.000</td>\n",
       "      <td>18250450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-09-28</td>\n",
       "      <td>467.000</td>\n",
       "      <td>469.800</td>\n",
       "      <td>20947276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-09-27</td>\n",
       "      <td>459.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>17966998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-09-24</td>\n",
       "      <td>461.400</td>\n",
       "      <td>460.200</td>\n",
       "      <td>16656914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4262</th>\n",
       "      <td>2004-06-23</td>\n",
       "      <td>4.050</td>\n",
       "      <td>4.425</td>\n",
       "      <td>55016000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4263</th>\n",
       "      <td>2004-06-21</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.000</td>\n",
       "      <td>22817000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4264</th>\n",
       "      <td>2004-06-18</td>\n",
       "      <td>4.200</td>\n",
       "      <td>4.025</td>\n",
       "      <td>36598000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4265</th>\n",
       "      <td>2004-06-17</td>\n",
       "      <td>4.150</td>\n",
       "      <td>4.225</td>\n",
       "      <td>83801500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4266</th>\n",
       "      <td>2004-06-16</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.150</td>\n",
       "      <td>439775000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4267 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date     Open    Close     Volume\n",
       "0    2021-09-30  456.000  461.400   17335451\n",
       "1    2021-09-29  461.600  465.000   18250450\n",
       "2    2021-09-28  467.000  469.800   20947276\n",
       "3    2021-09-27  459.000  464.600   17966998\n",
       "4    2021-09-24  461.400  460.200   16656914\n",
       "...         ...      ...      ...        ...\n",
       "4262 2004-06-23    4.050    4.425   55016000\n",
       "4263 2004-06-21    4.125    4.000   22817000\n",
       "4264 2004-06-18    4.200    4.025   36598000\n",
       "4265 2004-06-17    4.150    4.225   83801500\n",
       "4266 2004-06-16    4.375    4.150  439775000\n",
       "\n",
       "[4267 rows x 4 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 筛选出部分数据列\n",
    "df[['Date','Open','Close','Volume']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "9cf0cf66-6442-485d-842a-bd74dbfe94c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>456.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>453.800</td>\n",
       "      <td>461.400</td>\n",
       "      <td>17335451</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-29</th>\n",
       "      <td>461.600</td>\n",
       "      <td>465.000</td>\n",
       "      <td>450.200</td>\n",
       "      <td>465.000</td>\n",
       "      <td>18250450</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-28</th>\n",
       "      <td>467.000</td>\n",
       "      <td>476.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>469.800</td>\n",
       "      <td>20947276</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-27</th>\n",
       "      <td>459.000</td>\n",
       "      <td>473.000</td>\n",
       "      <td>455.200</td>\n",
       "      <td>464.600</td>\n",
       "      <td>17966998</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-24</th>\n",
       "      <td>461.400</td>\n",
       "      <td>473.400</td>\n",
       "      <td>456.200</td>\n",
       "      <td>460.200</td>\n",
       "      <td>16656914</td>\n",
       "      <td>2021</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-23</th>\n",
       "      <td>4.050</td>\n",
       "      <td>4.450</td>\n",
       "      <td>4.025</td>\n",
       "      <td>4.425</td>\n",
       "      <td>55016000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-21</th>\n",
       "      <td>4.125</td>\n",
       "      <td>4.125</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.000</td>\n",
       "      <td>22817000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-18</th>\n",
       "      <td>4.200</td>\n",
       "      <td>4.250</td>\n",
       "      <td>3.950</td>\n",
       "      <td>4.025</td>\n",
       "      <td>36598000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-17</th>\n",
       "      <td>4.150</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.225</td>\n",
       "      <td>83801500</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-16</th>\n",
       "      <td>4.375</td>\n",
       "      <td>4.625</td>\n",
       "      <td>4.075</td>\n",
       "      <td>4.150</td>\n",
       "      <td>439775000</td>\n",
       "      <td>2004</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4267 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Open     High      Low    Close     Volume  Year  Month\n",
       "Date                                                                  \n",
       "2021-09-30  456.000  464.600  453.800  461.400   17335451  2021      9\n",
       "2021-09-29  461.600  465.000  450.200  465.000   18250450  2021      9\n",
       "2021-09-28  467.000  476.200  464.600  469.800   20947276  2021      9\n",
       "2021-09-27  459.000  473.000  455.200  464.600   17966998  2021      9\n",
       "2021-09-24  461.400  473.400  456.200  460.200   16656914  2021      9\n",
       "...             ...      ...      ...      ...        ...   ...    ...\n",
       "2004-06-23    4.050    4.450    4.025    4.425   55016000  2004      6\n",
       "2004-06-21    4.125    4.125    3.950    4.000   22817000  2004      6\n",
       "2004-06-18    4.200    4.250    3.950    4.025   36598000  2004      6\n",
       "2004-06-17    4.150    4.375    4.125    4.225   83801500  2004      6\n",
       "2004-06-16    4.375    4.625    4.075    4.150  439775000  2004      6\n",
       "\n",
       "[4267 rows x 7 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 设置日期列为索引列\n",
    "df.set_index('Date',inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "39dc2d2e-fde8-4400-ab70-cab0b90cfcb6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-09-30</th>\n",
       "      <td>456.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>461.400</td>\n",
       "      <td>17335451</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-29</th>\n",
       "      <td>461.600</td>\n",
       "      <td>465.000</td>\n",
       "      <td>465.000</td>\n",
       "      <td>18250450</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-28</th>\n",
       "      <td>467.000</td>\n",
       "      <td>476.200</td>\n",
       "      <td>469.800</td>\n",
       "      <td>20947276</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-27</th>\n",
       "      <td>459.000</td>\n",
       "      <td>473.000</td>\n",
       "      <td>464.600</td>\n",
       "      <td>17966998</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-09-24</th>\n",
       "      <td>461.400</td>\n",
       "      <td>473.400</td>\n",
       "      <td>460.200</td>\n",
       "      <td>16656914</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-23</th>\n",
       "      <td>4.050</td>\n",
       "      <td>4.450</td>\n",
       "      <td>4.425</td>\n",
       "      <td>55016000</td>\n",
       "      <td>2004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-21</th>\n",
       "      <td>4.125</td>\n",
       "      <td>4.125</td>\n",
       "      <td>4.000</td>\n",
       "      <td>22817000</td>\n",
       "      <td>2004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-18</th>\n",
       "      <td>4.200</td>\n",
       "      <td>4.250</td>\n",
       "      <td>4.025</td>\n",
       "      <td>36598000</td>\n",
       "      <td>2004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-17</th>\n",
       "      <td>4.150</td>\n",
       "      <td>4.375</td>\n",
       "      <td>4.225</td>\n",
       "      <td>83801500</td>\n",
       "      <td>2004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-06-16</th>\n",
       "      <td>4.375</td>\n",
       "      <td>4.625</td>\n",
       "      <td>4.150</td>\n",
       "      <td>439775000</td>\n",
       "      <td>2004</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4267 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Open     High    Close     Volume  Year\n",
       "Date                                                  \n",
       "2021-09-30  456.000  464.600  461.400   17335451  2021\n",
       "2021-09-29  461.600  465.000  465.000   18250450  2021\n",
       "2021-09-28  467.000  476.200  469.800   20947276  2021\n",
       "2021-09-27  459.000  473.000  464.600   17966998  2021\n",
       "2021-09-24  461.400  473.400  460.200   16656914  2021\n",
       "...             ...      ...      ...        ...   ...\n",
       "2004-06-23    4.050    4.450    4.425   55016000  2004\n",
       "2004-06-21    4.125    4.125    4.000   22817000  2004\n",
       "2004-06-18    4.200    4.250    4.025   36598000  2004\n",
       "2004-06-17    4.150    4.375    4.225   83801500  2004\n",
       "2004-06-16    4.375    4.625    4.150  439775000  2004\n",
       "\n",
       "[4267 rows x 5 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 删除不需要的列\n",
    "df.drop(columns=['Month','Low'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "222b03ce-d085-4ae2-bd52-ccb3e4071f28",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 对列进行重命名\n",
    "# 直接等于新列表进行覆盖 df.columns['','',...]\n",
    "# 函数 df.rename(columns={'':''},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b4fdca28-c86e-45a7-9629-1a912d466a21",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4b30c46-df0a-4435-b9d9-9de1ea887ac2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "2085ef80-fb45-4afb-8431-ee20d9858f8c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 实战二、电信客户流失数据集"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f2477a90-6c73-44ab-8038-0a255615c74a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customerID</th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>...</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7590-VHVEG</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5575-GNVDE</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>34</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>One year</td>\n",
       "      <td>No</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3668-QPYBK</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7795-CFOCW</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>45</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>One year</td>\n",
       "      <td>No</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9237-HQITU</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7038</th>\n",
       "      <td>6840-RESVB</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>24</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>One year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>84.80</td>\n",
       "      <td>1990.5</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7039</th>\n",
       "      <td>2234-XADUH</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>72</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>One year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Credit card (automatic)</td>\n",
       "      <td>103.20</td>\n",
       "      <td>7362.9</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7040</th>\n",
       "      <td>4801-JZAZL</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.60</td>\n",
       "      <td>346.45</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7041</th>\n",
       "      <td>8361-LTMKD</td>\n",
       "      <td>Male</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>74.40</td>\n",
       "      <td>306.6</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7042</th>\n",
       "      <td>3186-AJIEK</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>66</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Two year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>105.65</td>\n",
       "      <td>6844.5</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7043 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n",
       "0     7590-VHVEG  Female              0     Yes         No       1   \n",
       "1     5575-GNVDE    Male              0      No         No      34   \n",
       "2     3668-QPYBK    Male              0      No         No       2   \n",
       "3     7795-CFOCW    Male              0      No         No      45   \n",
       "4     9237-HQITU  Female              0      No         No       2   \n",
       "...          ...     ...            ...     ...        ...     ...   \n",
       "7038  6840-RESVB    Male              0     Yes        Yes      24   \n",
       "7039  2234-XADUH  Female              0     Yes        Yes      72   \n",
       "7040  4801-JZAZL  Female              0     Yes        Yes      11   \n",
       "7041  8361-LTMKD    Male              1     Yes         No       4   \n",
       "7042  3186-AJIEK    Male              0      No         No      66   \n",
       "\n",
       "     PhoneService     MultipleLines InternetService OnlineSecurity  ...  \\\n",
       "0              No  No phone service             DSL             No  ...   \n",
       "1             Yes                No             DSL            Yes  ...   \n",
       "2             Yes                No             DSL            Yes  ...   \n",
       "3              No  No phone service             DSL            Yes  ...   \n",
       "4             Yes                No     Fiber optic             No  ...   \n",
       "...           ...               ...             ...            ...  ...   \n",
       "7038          Yes               Yes             DSL            Yes  ...   \n",
       "7039          Yes               Yes     Fiber optic             No  ...   \n",
       "7040           No  No phone service             DSL            Yes  ...   \n",
       "7041          Yes               Yes     Fiber optic             No  ...   \n",
       "7042          Yes                No     Fiber optic            Yes  ...   \n",
       "\n",
       "     DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n",
       "0                  No          No          No              No  Month-to-month   \n",
       "1                 Yes          No          No              No        One year   \n",
       "2                  No          No          No              No  Month-to-month   \n",
       "3                 Yes         Yes          No              No        One year   \n",
       "4                  No          No          No              No  Month-to-month   \n",
       "...               ...         ...         ...             ...             ...   \n",
       "7038              Yes         Yes         Yes             Yes        One year   \n",
       "7039              Yes          No         Yes             Yes        One year   \n",
       "7040               No          No          No              No  Month-to-month   \n",
       "7041               No          No          No              No  Month-to-month   \n",
       "7042              Yes         Yes         Yes             Yes        Two year   \n",
       "\n",
       "     PaperlessBilling              PaymentMethod MonthlyCharges  TotalCharges  \\\n",
       "0                 Yes           Electronic check          29.85         29.85   \n",
       "1                  No               Mailed check          56.95        1889.5   \n",
       "2                 Yes               Mailed check          53.85        108.15   \n",
       "3                  No  Bank transfer (automatic)          42.30       1840.75   \n",
       "4                 Yes           Electronic check          70.70        151.65   \n",
       "...               ...                        ...            ...           ...   \n",
       "7038              Yes               Mailed check          84.80        1990.5   \n",
       "7039              Yes    Credit card (automatic)         103.20        7362.9   \n",
       "7040              Yes           Electronic check          29.60        346.45   \n",
       "7041              Yes               Mailed check          74.40         306.6   \n",
       "7042              Yes  Bank transfer (automatic)         105.65        6844.5   \n",
       "\n",
       "     Churn  \n",
       "0       No  \n",
       "1       No  \n",
       "2      Yes  \n",
       "3       No  \n",
       "4      Yes  \n",
       "...    ...  \n",
       "7038    No  \n",
       "7039    No  \n",
       "7040    No  \n",
       "7041   Yes  \n",
       "7042    No  \n",
       "\n",
       "[7043 rows x 21 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 数据引入\n",
    "import pandas as pd\n",
    "df=pd.read_csv('ant-exercises-pandas-master/datas/Telco-Customer-Churn.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f3ddd1bb-d505-44a5-a2e5-1c2f39164349",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customerID</th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>...</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7038</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7039</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7040</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7041</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7042</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7043 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      customerID  gender  SeniorCitizen  Partner  Dependents  tenure  \\\n",
       "0          False   False          False    False       False   False   \n",
       "1          False   False          False    False       False   False   \n",
       "2          False   False          False    False       False   False   \n",
       "3          False   False          False    False       False   False   \n",
       "4          False   False          False    False       False   False   \n",
       "...          ...     ...            ...      ...         ...     ...   \n",
       "7038       False   False          False    False       False   False   \n",
       "7039       False   False          False    False       False   False   \n",
       "7040       False   False          False    False       False   False   \n",
       "7041       False   False          False    False       False   False   \n",
       "7042       False   False          False    False       False   False   \n",
       "\n",
       "      PhoneService  MultipleLines  InternetService  OnlineSecurity  ...  \\\n",
       "0            False          False            False           False  ...   \n",
       "1            False          False            False           False  ...   \n",
       "2            False          False            False           False  ...   \n",
       "3            False          False            False           False  ...   \n",
       "4            False          False            False           False  ...   \n",
       "...            ...            ...              ...             ...  ...   \n",
       "7038         False          False            False           False  ...   \n",
       "7039         False          False            False           False  ...   \n",
       "7040         False          False            False           False  ...   \n",
       "7041         False          False            False           False  ...   \n",
       "7042         False          False            False           False  ...   \n",
       "\n",
       "      DeviceProtection  TechSupport  StreamingTV  StreamingMovies  Contract  \\\n",
       "0                False        False        False            False     False   \n",
       "1                False        False        False            False     False   \n",
       "2                False        False        False            False     False   \n",
       "3                False        False        False            False     False   \n",
       "4                False        False        False            False     False   \n",
       "...                ...          ...          ...              ...       ...   \n",
       "7038             False        False        False            False     False   \n",
       "7039             False        False        False            False     False   \n",
       "7040             False        False        False            False     False   \n",
       "7041             False        False        False            False     False   \n",
       "7042             False        False        False            False     False   \n",
       "\n",
       "      PaperlessBilling  PaymentMethod  MonthlyCharges  TotalCharges  Churn  \n",
       "0                False          False           False         False  False  \n",
       "1                False          False           False         False  False  \n",
       "2                False          False           False         False  False  \n",
       "3                False          False           False         False  False  \n",
       "4                False          False           False         False  False  \n",
       "...                ...            ...             ...           ...    ...  \n",
       "7038             False          False           False         False  False  \n",
       "7039             False          False           False         False  False  \n",
       "7040             False          False           False         False  False  \n",
       "7041             False          False           False         False  False  \n",
       "7042             False          False           False         False  False  \n",
       "\n",
       "[7043 rows x 21 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 查询缺失值\n",
    "df.isnull()\n",
    "# df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "7ce6a483-a1f2-42b8-b598-ae03f4aca18d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "customerID          0\n",
       "gender              0\n",
       "SeniorCitizen       0\n",
       "Partner             0\n",
       "Dependents          0\n",
       "tenure              0\n",
       "PhoneService        0\n",
       "MultipleLines       0\n",
       "InternetService     0\n",
       "OnlineSecurity      0\n",
       "OnlineBackup        0\n",
       "DeviceProtection    0\n",
       "TechSupport         0\n",
       "StreamingTV         0\n",
       "StreamingMovies     0\n",
       "Contract            0\n",
       "PaperlessBilling    0\n",
       "PaymentMethod       0\n",
       "MonthlyCharges      0\n",
       "TotalCharges        0\n",
       "Churn               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 按照列统计缺失值\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7a580c05-d7af-40bf-9824-fc32cce77769",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 7043 entries, 0 to 7042\n",
      "Data columns (total 21 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   customerID        7043 non-null   object \n",
      " 1   gender            7043 non-null   object \n",
      " 2   SeniorCitizen     7043 non-null   int64  \n",
      " 3   Partner           7043 non-null   object \n",
      " 4   Dependents        7043 non-null   object \n",
      " 5   tenure            7043 non-null   int64  \n",
      " 6   PhoneService      7043 non-null   object \n",
      " 7   MultipleLines     7043 non-null   object \n",
      " 8   InternetService   7043 non-null   object \n",
      " 9   OnlineSecurity    7043 non-null   object \n",
      " 10  OnlineBackup      7043 non-null   object \n",
      " 11  DeviceProtection  7043 non-null   object \n",
      " 12  TechSupport       7043 non-null   object \n",
      " 13  StreamingTV       7043 non-null   object \n",
      " 14  StreamingMovies   7043 non-null   object \n",
      " 15  Contract          7043 non-null   object \n",
      " 16  PaperlessBilling  7043 non-null   object \n",
      " 17  PaymentMethod     7043 non-null   object \n",
      " 18  MonthlyCharges    7043 non-null   float64\n",
      " 19  TotalCharges      7043 non-null   object \n",
      " 20  Churn             7043 non-null   object \n",
      "dtypes: float64(1), int64(2), object(18)\n",
      "memory usage: 1.1+ MB\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "TotalCharges\n",
       "          11\n",
       "20.2      11\n",
       "19.75      9\n",
       "20.05      8\n",
       "19.9       8\n",
       "          ..\n",
       "6849.4     1\n",
       "692.35     1\n",
       "130.15     1\n",
       "3211.9     1\n",
       "6844.5     1\n",
       "Name: count, Length: 6531, dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 设置数据列的类型\n",
    "# TotalCharges为字符串类型而非整数或者浮点数，首先找出原因（脏数据或者控制列），其次修改为浮点数\n",
    "df.info() # 查类型\n",
    "df['TotalCharges'].value_counts() # 数值出现次数\n",
    "# 可见空格出现了11此导致数据不能成为浮点数，对空格进行填充（中位数）"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a79b0ac7-5973-40aa-8a5a-6cbfe1058702",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customerID</th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>...</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7590-VHVEG</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5575-GNVDE</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>34</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>One year</td>\n",
       "      <td>No</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3668-QPYBK</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7795-CFOCW</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>45</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>One year</td>\n",
       "      <td>No</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9237-HQITU</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7038</th>\n",
       "      <td>6840-RESVB</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>24</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>One year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>84.80</td>\n",
       "      <td>1990.5</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7039</th>\n",
       "      <td>2234-XADUH</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>72</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>One year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Credit card (automatic)</td>\n",
       "      <td>103.20</td>\n",
       "      <td>7362.9</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7040</th>\n",
       "      <td>4801-JZAZL</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.60</td>\n",
       "      <td>346.45</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7041</th>\n",
       "      <td>8361-LTMKD</td>\n",
       "      <td>Male</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>74.40</td>\n",
       "      <td>306.6</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7042</th>\n",
       "      <td>3186-AJIEK</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>66</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Two year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>105.65</td>\n",
       "      <td>6844.5</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7043 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n",
       "0     7590-VHVEG  Female              0     Yes         No       1   \n",
       "1     5575-GNVDE    Male              0      No         No      34   \n",
       "2     3668-QPYBK    Male              0      No         No       2   \n",
       "3     7795-CFOCW    Male              0      No         No      45   \n",
       "4     9237-HQITU  Female              0      No         No       2   \n",
       "...          ...     ...            ...     ...        ...     ...   \n",
       "7038  6840-RESVB    Male              0     Yes        Yes      24   \n",
       "7039  2234-XADUH  Female              0     Yes        Yes      72   \n",
       "7040  4801-JZAZL  Female              0     Yes        Yes      11   \n",
       "7041  8361-LTMKD    Male              1     Yes         No       4   \n",
       "7042  3186-AJIEK    Male              0      No         No      66   \n",
       "\n",
       "     PhoneService     MultipleLines InternetService OnlineSecurity  ...  \\\n",
       "0              No  No phone service             DSL             No  ...   \n",
       "1             Yes                No             DSL            Yes  ...   \n",
       "2             Yes                No             DSL            Yes  ...   \n",
       "3              No  No phone service             DSL            Yes  ...   \n",
       "4             Yes                No     Fiber optic             No  ...   \n",
       "...           ...               ...             ...            ...  ...   \n",
       "7038          Yes               Yes             DSL            Yes  ...   \n",
       "7039          Yes               Yes     Fiber optic             No  ...   \n",
       "7040           No  No phone service             DSL            Yes  ...   \n",
       "7041          Yes               Yes     Fiber optic             No  ...   \n",
       "7042          Yes                No     Fiber optic            Yes  ...   \n",
       "\n",
       "     DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n",
       "0                  No          No          No              No  Month-to-month   \n",
       "1                 Yes          No          No              No        One year   \n",
       "2                  No          No          No              No  Month-to-month   \n",
       "3                 Yes         Yes          No              No        One year   \n",
       "4                  No          No          No              No  Month-to-month   \n",
       "...               ...         ...         ...             ...             ...   \n",
       "7038              Yes         Yes         Yes             Yes        One year   \n",
       "7039              Yes          No         Yes             Yes        One year   \n",
       "7040               No          No          No              No  Month-to-month   \n",
       "7041               No          No          No              No  Month-to-month   \n",
       "7042              Yes         Yes         Yes             Yes        Two year   \n",
       "\n",
       "     PaperlessBilling              PaymentMethod MonthlyCharges  TotalCharges  \\\n",
       "0                 Yes           Electronic check          29.85         29.85   \n",
       "1                  No               Mailed check          56.95        1889.5   \n",
       "2                 Yes               Mailed check          53.85        108.15   \n",
       "3                  No  Bank transfer (automatic)          42.30       1840.75   \n",
       "4                 Yes           Electronic check          70.70        151.65   \n",
       "...               ...                        ...            ...           ...   \n",
       "7038              Yes               Mailed check          84.80        1990.5   \n",
       "7039              Yes    Credit card (automatic)         103.20        7362.9   \n",
       "7040              Yes           Electronic check          29.60        346.45   \n",
       "7041              Yes               Mailed check          74.40         306.6   \n",
       "7042              Yes  Bank transfer (automatic)         105.65        6844.5   \n",
       "\n",
       "     Churn  \n",
       "0       No  \n",
       "1       No  \n",
       "2      Yes  \n",
       "3       No  \n",
       "4      Yes  \n",
       "...    ...  \n",
       "7038    No  \n",
       "7039    No  \n",
       "7040    No  \n",
       "7041   Yes  \n",
       "7042    No  \n",
       "\n",
       "[7043 rows x 21 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 数据填充\n",
    "df['TotalCharges'][df['TotalCharges']!=' '] # 筛选出列中非空白数据\n",
    "median=df['TotalCharges'][df['TotalCharges']!=' '].astype('float').median() # 计算中位数并存到变量里面\n",
    "# 数据填充\n",
    "df.loc[df['TotalCharges']==' ','TotalCharges']=median\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b69c4bc6-3243-488e-85f9-5487a5e64f86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "TotalCharges\n",
       "1397.475    11\n",
       "20.2        11\n",
       "19.75        9\n",
       "20.05        8\n",
       "19.9         8\n",
       "            ..\n",
       "6849.4       1\n",
       "692.35       1\n",
       "130.15       1\n",
       "3211.9       1\n",
       "6844.5       1\n",
       "Name: count, Length: 6531, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 检验\n",
    "df['TotalCharges'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "6dbed746-6773-4aae-93ef-8a3186d3523d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 7043 entries, 0 to 7042\n",
      "Data columns (total 21 columns):\n",
      " #   Column            Non-Null Count  Dtype   \n",
      "---  ------            --------------  -----   \n",
      " 0   customerID        7043 non-null   category\n",
      " 1   gender            7043 non-null   category\n",
      " 2   SeniorCitizen     7043 non-null   category\n",
      " 3   Partner           7043 non-null   category\n",
      " 4   Dependents        7043 non-null   category\n",
      " 5   tenure            7043 non-null   float64 \n",
      " 6   PhoneService      7043 non-null   category\n",
      " 7   MultipleLines     7043 non-null   category\n",
      " 8   InternetService   7043 non-null   category\n",
      " 9   OnlineSecurity    7043 non-null   category\n",
      " 10  OnlineBackup      7043 non-null   category\n",
      " 11  DeviceProtection  7043 non-null   category\n",
      " 12  TechSupport       7043 non-null   category\n",
      " 13  StreamingTV       7043 non-null   category\n",
      " 14  StreamingMovies   7043 non-null   category\n",
      " 15  Contract          7043 non-null   category\n",
      " 16  PaperlessBilling  7043 non-null   category\n",
      " 17  PaymentMethod     7043 non-null   category\n",
      " 18  MonthlyCharges    7043 non-null   float64 \n",
      " 19  TotalCharges      7043 non-null   float64 \n",
      " 20  Churn             7043 non-null   category\n",
      "dtypes: category(18), float64(3)\n",
      "memory usage: 611.1 KB\n"
     ]
    }
   ],
   "source": [
    "# 将类别字段转换为cat\n",
    "# 将tenure,monthlycharges,totalcharges转换成float类型，其他列转换成categorical\n",
    "number_columns=['tenure','MonthlyCharges','TotalCharges']\n",
    "for column in number_columns:\n",
    "    df[column]=df[column].astype(float)\n",
    "# 其他列变成categorical\n",
    "for column in set(df.columns)-set(number_columns):\n",
    "    df[column]=pd.Categorical(df[column])\n",
    "df.info()  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "4c140646-9fb2-4773-a0ff-3f187a0dba4b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customerID</th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "      <td>7043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>7043</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>0002-ORFBO</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>3555</td>\n",
       "      <td>5901</td>\n",
       "      <td>3641</td>\n",
       "      <td>4933</td>\n",
       "      <td>6361</td>\n",
       "      <td>3390</td>\n",
       "      <td>3096</td>\n",
       "      <td>3498</td>\n",
       "      <td>3088</td>\n",
       "      <td>3095</td>\n",
       "      <td>3473</td>\n",
       "      <td>2810</td>\n",
       "      <td>2785</td>\n",
       "      <td>3875</td>\n",
       "      <td>4171</td>\n",
       "      <td>2365</td>\n",
       "      <td>5174</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        customerID gender  SeniorCitizen Partner Dependents PhoneService  \\\n",
       "count         7043   7043           7043    7043       7043         7043   \n",
       "unique        7043      2              2       2          2            2   \n",
       "top     0002-ORFBO   Male              0      No         No          Yes   \n",
       "freq             1   3555           5901    3641       4933         6361   \n",
       "\n",
       "       MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n",
       "count           7043            7043           7043         7043   \n",
       "unique             3               3              3            3   \n",
       "top               No     Fiber optic             No           No   \n",
       "freq            3390            3096           3498         3088   \n",
       "\n",
       "       DeviceProtection TechSupport StreamingTV StreamingMovies  \\\n",
       "count              7043        7043        7043            7043   \n",
       "unique                3           3           3               3   \n",
       "top                  No          No          No              No   \n",
       "freq               3095        3473        2810            2785   \n",
       "\n",
       "              Contract PaperlessBilling     PaymentMethod Churn  \n",
       "count             7043             7043              7043  7043  \n",
       "unique               3                2                 4     2  \n",
       "top     Month-to-month              Yes  Electronic check    No  \n",
       "freq              3875             4171              2365  5174  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 对cat类型字段数据统计\n",
    "df.describe(include=['category'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "70a119da-1c6e-4cd9-b1f3-2a23e1bd7ec4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\wenme\\AppData\\Local\\Temp\\ipykernel_5848\\2329295033.py:2: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  df.groupby(['Churn','PaymentMethod'])['MonthlyCharges'].mean() # 按照用户是否流失与付款方式进行分组，对月费进行统计，求平均值\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Churn  PaymentMethod            \n",
       "No     Bank transfer (automatic)    65.049417\n",
       "       Credit card (automatic)      64.562209\n",
       "       Electronic check             74.232032\n",
       "       Mailed check                 41.403911\n",
       "Yes    Bank transfer (automatic)    77.875581\n",
       "       Credit card (automatic)      77.356034\n",
       "       Electronic check             78.700980\n",
       "       Mailed check                 54.557143\n",
       "Name: MonthlyCharges, dtype: float64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 多维度查看月费字段统计\n",
    "df.groupby(['Churn','PaymentMethod'])['MonthlyCharges'].mean() # 按照用户是否流失与付款方式进行分组，对月费进行统计，求平均值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "4e290013-de2b-4365-8422-285e3d8828ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Churn\n",
       "No     5174\n",
       "Yes    1869\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 用户是否流失数据段churn字段的数据映射\n",
    "# 送给机器进行学习，将是与否转换成为0与1，即字符串到数字的映射\n",
    "df['Churn'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "901230fb-5323-4104-8540-641a6c545ec4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 数据处理  df['Churn']=df['Churn'].map({'Yes':'1','No':'0'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a39a5c76-252f-4fa6-9b43-3b4dce84fb71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tenure</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>tenure</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.247900</td>\n",
       "      <td>0.825464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <td>0.247900</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.650864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TotalCharges</th>\n",
       "      <td>0.825464</td>\n",
       "      <td>0.650864</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  tenure  MonthlyCharges  TotalCharges\n",
       "tenure          1.000000        0.247900      0.825464\n",
       "MonthlyCharges  0.247900        1.000000      0.650864\n",
       "TotalCharges    0.825464        0.650864      1.000000"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 查看字段的相关性矩阵\n",
    "df[['tenure', 'MonthlyCharges', 'TotalCharges']].corr()\n",
    "# pycharm直接用df.corr()会直接挑选数字进行相关性计算"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "652b3615-9614-46de-a92b-d0c41fc3ac0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customerID</th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>...</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5017</th>\n",
       "      <td>2073-QBVBI</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>41.0</td>\n",
       "      <td>No</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>One year</td>\n",
       "      <td>No</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>35.45</td>\n",
       "      <td>1391.65</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2722</th>\n",
       "      <td>4635-EJYPD</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>32.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>...</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>Two year</td>\n",
       "      <td>No</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>18.95</td>\n",
       "      <td>613.95</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5818</th>\n",
       "      <td>3197-NNYNB</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>65.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Two year</td>\n",
       "      <td>No</td>\n",
       "      <td>Credit card (automatic)</td>\n",
       "      <td>105.10</td>\n",
       "      <td>6631.85</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2571</th>\n",
       "      <td>8216-AZUUZ</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>42.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Two year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>100.40</td>\n",
       "      <td>4303.65</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1284</th>\n",
       "      <td>8711-LOBKY</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>59.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>...</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>Two year</td>\n",
       "      <td>No</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>19.85</td>\n",
       "      <td>1188.25</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4742</th>\n",
       "      <td>8544-JNBOX</td>\n",
       "      <td>Male</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>72.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>...</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>No internet service</td>\n",
       "      <td>Two year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>20.80</td>\n",
       "      <td>1521.20</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5839</th>\n",
       "      <td>2077-MPJQO</td>\n",
       "      <td>Male</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>7.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>75.40</td>\n",
       "      <td>533.05</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>604</th>\n",
       "      <td>2731-GJRDG</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>32.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>One year</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>109.55</td>\n",
       "      <td>3608.00</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>139</th>\n",
       "      <td>0390-DCFDQ</td>\n",
       "      <td>Female</td>\n",
       "      <td>1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>70.45</td>\n",
       "      <td>70.45</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6802</th>\n",
       "      <td>5626-MGTUK</td>\n",
       "      <td>Female</td>\n",
       "      <td>0</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>20.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>Yes</td>\n",
       "      <td>...</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>89.10</td>\n",
       "      <td>1879.25</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      customerID  gender SeniorCitizen Partner Dependents  tenure  \\\n",
       "5017  2073-QBVBI  Female             0     Yes         No    41.0   \n",
       "2722  4635-EJYPD    Male             0     Yes        Yes    32.0   \n",
       "5818  3197-NNYNB    Male             0      No         No    65.0   \n",
       "2571  8216-AZUUZ  Female             0     Yes        Yes    42.0   \n",
       "1284  8711-LOBKY    Male             0     Yes        Yes    59.0   \n",
       "4742  8544-JNBOX    Male             0      No         No    72.0   \n",
       "5839  2077-MPJQO    Male             1     Yes         No     7.0   \n",
       "604   2731-GJRDG  Female             0      No         No    32.0   \n",
       "139   0390-DCFDQ  Female             1     Yes         No     1.0   \n",
       "6802  5626-MGTUK  Female             0      No         No    20.0   \n",
       "\n",
       "     PhoneService     MultipleLines InternetService       OnlineSecurity  ...  \\\n",
       "5017           No  No phone service             DSL                   No  ...   \n",
       "2722          Yes                No              No  No internet service  ...   \n",
       "5818          Yes               Yes     Fiber optic                   No  ...   \n",
       "2571          Yes                No     Fiber optic                   No  ...   \n",
       "1284          Yes                No              No  No internet service  ...   \n",
       "4742          Yes                No              No  No internet service  ...   \n",
       "5839          Yes               Yes     Fiber optic                   No  ...   \n",
       "604           Yes               Yes     Fiber optic                  Yes  ...   \n",
       "139           Yes                No     Fiber optic                   No  ...   \n",
       "6802          Yes               Yes     Fiber optic                  Yes  ...   \n",
       "\n",
       "         DeviceProtection          TechSupport          StreamingTV  \\\n",
       "5017                   No                  Yes                   No   \n",
       "2722  No internet service  No internet service  No internet service   \n",
       "5818                  Yes                   No                  Yes   \n",
       "2571                  Yes                  Yes                  Yes   \n",
       "1284  No internet service  No internet service  No internet service   \n",
       "4742  No internet service  No internet service  No internet service   \n",
       "5839                   No                   No                   No   \n",
       "604                   Yes                  Yes                  Yes   \n",
       "139                    No                   No                   No   \n",
       "6802                   No                   No                  Yes   \n",
       "\n",
       "          StreamingMovies        Contract PaperlessBilling  \\\n",
       "5017                   No        One year               No   \n",
       "2722  No internet service        Two year               No   \n",
       "5818                  Yes        Two year               No   \n",
       "2571                  Yes        Two year              Yes   \n",
       "1284  No internet service        Two year               No   \n",
       "4742  No internet service        Two year              Yes   \n",
       "5839                   No  Month-to-month              Yes   \n",
       "604                   Yes        One year              Yes   \n",
       "139                    No  Month-to-month              Yes   \n",
       "6802                   No  Month-to-month              Yes   \n",
       "\n",
       "                  PaymentMethod MonthlyCharges  TotalCharges  Churn  \n",
       "5017               Mailed check          35.45       1391.65     No  \n",
       "2722               Mailed check          18.95        613.95     No  \n",
       "5818    Credit card (automatic)         105.10       6631.85     No  \n",
       "2571           Electronic check         100.40       4303.65     No  \n",
       "1284               Mailed check          19.85       1188.25     No  \n",
       "4742               Mailed check          20.80       1521.20     No  \n",
       "5839           Electronic check          75.40        533.05     No  \n",
       "604   Bank transfer (automatic)         109.55       3608.00     No  \n",
       "139                Mailed check          70.45         70.45    Yes  \n",
       "6802  Bank transfer (automatic)          89.10       1879.25     No  \n",
       "\n",
       "[10 rows x 21 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 采样数据\n",
    "df.sample(10)\n",
    "# 保存数据 df.sample(10).to_excel()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "be075c6e-39fc-45bd-aca3-5f6d51ada129",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c443fd6-c3e9-4fa4-af43-f85fa18ac572",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "fa8bd4d6-6f81-47c4-a29c-d2802c430179",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 实战三、随机数组"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "a488b5f7-0f28-452e-bd7f-74309f59a452",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.876773</td>\n",
       "      <td>1.560390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.599204</td>\n",
       "      <td>-0.648517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.400458</td>\n",
       "      <td>0.577905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.543089</td>\n",
       "      <td>-0.351622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.951249</td>\n",
       "      <td>1.093768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.689470</td>\n",
       "      <td>-0.084643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.395159</td>\n",
       "      <td>1.359109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.390217</td>\n",
       "      <td>-0.701963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.312098</td>\n",
       "      <td>1.143913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.392765</td>\n",
       "      <td>0.257344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.149254</td>\n",
       "      <td>-1.015384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.258713</td>\n",
       "      <td>-1.978682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.323980</td>\n",
       "      <td>-0.876652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.072600</td>\n",
       "      <td>1.047714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.001977</td>\n",
       "      <td>-0.330816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.814085</td>\n",
       "      <td>-0.467920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.469908</td>\n",
       "      <td>0.068922</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2\n",
       "0   0.184218  1.437454\n",
       "1   0.256276  0.016633\n",
       "2   0.565254  0.234054\n",
       "3   0.876773  1.560390\n",
       "4   0.599204 -0.648517\n",
       "5   0.400458  0.577905\n",
       "6   0.543089 -0.351622\n",
       "7   0.951249  1.093768\n",
       "8   0.689470 -0.084643\n",
       "9   0.395159  1.359109\n",
       "10  0.390217 -0.701963\n",
       "11  0.312098  1.143913\n",
       "12  0.392765  0.257344\n",
       "13  0.149254 -1.015384\n",
       "14  0.258713 -1.978682\n",
       "15  0.323980 -0.876652\n",
       "16  0.072600  1.047714\n",
       "17  0.001977 -0.330816\n",
       "18  0.814085 -0.467920\n",
       "19  0.469908  0.068922"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "s1=pd.Series(np.random.rand(20))\n",
    "s2=pd.Series(np.random.randn(20))\n",
    "df=pd.concat([s1,s2],axis=1)\n",
    "df.columns=['col1','col2']\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "267d5e33-6089-454a-8c60-60646edc40d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.876773</td>\n",
       "      <td>1.560390</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.599204</td>\n",
       "      <td>-0.648517</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.400458</td>\n",
       "      <td>0.577905</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.543089</td>\n",
       "      <td>-0.351622</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.951249</td>\n",
       "      <td>1.093768</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.689470</td>\n",
       "      <td>-0.084643</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.395159</td>\n",
       "      <td>1.359109</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.390217</td>\n",
       "      <td>-0.701963</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.312098</td>\n",
       "      <td>1.143913</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.392765</td>\n",
       "      <td>0.257344</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.149254</td>\n",
       "      <td>-1.015384</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.258713</td>\n",
       "      <td>-1.978682</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.323980</td>\n",
       "      <td>-0.876652</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.072600</td>\n",
       "      <td>1.047714</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.001977</td>\n",
       "      <td>-0.330816</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.814085</td>\n",
       "      <td>-0.467920</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.469908</td>\n",
       "      <td>0.068922</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2  col3\n",
       "0   0.184218  1.437454     1\n",
       "1   0.256276  0.016633     1\n",
       "2   0.565254  0.234054     1\n",
       "3   0.876773  1.560390     1\n",
       "4   0.599204 -0.648517    -1\n",
       "5   0.400458  0.577905     1\n",
       "6   0.543089 -0.351622    -1\n",
       "7   0.951249  1.093768     1\n",
       "8   0.689470 -0.084643    -1\n",
       "9   0.395159  1.359109     1\n",
       "10  0.390217 -0.701963    -1\n",
       "11  0.312098  1.143913     1\n",
       "12  0.392765  0.257344     1\n",
       "13  0.149254 -1.015384    -1\n",
       "14  0.258713 -1.978682    -1\n",
       "15  0.323980 -0.876652    -1\n",
       "16  0.072600  1.047714     1\n",
       "17  0.001977 -0.330816    -1\n",
       "18  0.814085 -0.467920    -1\n",
       "19  0.469908  0.068922     1"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 根据现有列计算新列\n",
    "df['col3']=df['col2'].map(lambda x:1 if x>0 else -1) # 可以转换虚拟变量\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "99dfbfe8-c7d3-4a13-af85-fcd7e827ae36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.876773</td>\n",
       "      <td>1.560390</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.599204</td>\n",
       "      <td>-0.648517</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.648517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.400458</td>\n",
       "      <td>0.577905</td>\n",
       "      <td>1</td>\n",
       "      <td>0.577905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.543089</td>\n",
       "      <td>-0.351622</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.351622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.951249</td>\n",
       "      <td>1.093768</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.689470</td>\n",
       "      <td>-0.084643</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.084643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.395159</td>\n",
       "      <td>1.359109</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.390217</td>\n",
       "      <td>-0.701963</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.701963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.312098</td>\n",
       "      <td>1.143913</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.392765</td>\n",
       "      <td>0.257344</td>\n",
       "      <td>1</td>\n",
       "      <td>0.257344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.149254</td>\n",
       "      <td>-1.015384</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.258713</td>\n",
       "      <td>-1.978682</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.323980</td>\n",
       "      <td>-0.876652</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.876652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.072600</td>\n",
       "      <td>1.047714</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.001977</td>\n",
       "      <td>-0.330816</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.330816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.814085</td>\n",
       "      <td>-0.467920</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.467920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.469908</td>\n",
       "      <td>0.068922</td>\n",
       "      <td>1</td>\n",
       "      <td>0.068922</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2  col3      col4\n",
       "0   0.184218  1.437454     1  1.000000\n",
       "1   0.256276  0.016633     1  0.016633\n",
       "2   0.565254  0.234054     1  0.234054\n",
       "3   0.876773  1.560390     1  1.000000\n",
       "4   0.599204 -0.648517    -1 -0.648517\n",
       "5   0.400458  0.577905     1  0.577905\n",
       "6   0.543089 -0.351622    -1 -0.351622\n",
       "7   0.951249  1.093768     1  1.000000\n",
       "8   0.689470 -0.084643    -1 -0.084643\n",
       "9   0.395159  1.359109     1  1.000000\n",
       "10  0.390217 -0.701963    -1 -0.701963\n",
       "11  0.312098  1.143913     1  1.000000\n",
       "12  0.392765  0.257344     1  0.257344\n",
       "13  0.149254 -1.015384    -1 -1.000000\n",
       "14  0.258713 -1.978682    -1 -1.000000\n",
       "15  0.323980 -0.876652    -1 -0.876652\n",
       "16  0.072600  1.047714     1  1.000000\n",
       "17  0.001977 -0.330816    -1 -0.330816\n",
       "18  0.814085 -0.467920    -1 -0.467920\n",
       "19  0.469908  0.068922     1  0.068922"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 根据现有列截断列生成新列\n",
    "df['col4']=df['col2'].clip(-1.0,1.0)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "8d3b4e41-fd51-4cb4-ac2f-fac56372479f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14   -1.978682\n",
       "13   -1.015384\n",
       "15   -0.876652\n",
       "10   -0.701963\n",
       "4    -0.648517\n",
       "Name: col2, dtype: float64"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 输出最大的n个数和最小的n个数\n",
    "df['col2'].nlargest(5)\n",
    "df['col2'].nsmallest(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "30ccef2c-a47f-4e70-b0e7-4c4d85f1f851",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.440494</td>\n",
       "      <td>1.454087</td>\n",
       "      <td>2</td>\n",
       "      <td>1.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.005748</td>\n",
       "      <td>1.688141</td>\n",
       "      <td>3</td>\n",
       "      <td>1.250687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.882521</td>\n",
       "      <td>3.248531</td>\n",
       "      <td>4</td>\n",
       "      <td>2.250687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.481725</td>\n",
       "      <td>2.600014</td>\n",
       "      <td>3</td>\n",
       "      <td>1.602171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2.882183</td>\n",
       "      <td>3.177920</td>\n",
       "      <td>4</td>\n",
       "      <td>2.180076</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3.425273</td>\n",
       "      <td>2.826298</td>\n",
       "      <td>3</td>\n",
       "      <td>1.828455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4.376522</td>\n",
       "      <td>3.920066</td>\n",
       "      <td>4</td>\n",
       "      <td>2.828455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5.065992</td>\n",
       "      <td>3.835423</td>\n",
       "      <td>3</td>\n",
       "      <td>2.743812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5.461152</td>\n",
       "      <td>5.194532</td>\n",
       "      <td>4</td>\n",
       "      <td>3.743812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5.851369</td>\n",
       "      <td>4.492569</td>\n",
       "      <td>3</td>\n",
       "      <td>3.041849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>6.163467</td>\n",
       "      <td>5.636482</td>\n",
       "      <td>4</td>\n",
       "      <td>4.041849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>6.556232</td>\n",
       "      <td>5.893826</td>\n",
       "      <td>5</td>\n",
       "      <td>4.299193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>6.705486</td>\n",
       "      <td>4.878442</td>\n",
       "      <td>4</td>\n",
       "      <td>3.299193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>6.964199</td>\n",
       "      <td>2.899760</td>\n",
       "      <td>3</td>\n",
       "      <td>2.299193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>7.288179</td>\n",
       "      <td>2.023108</td>\n",
       "      <td>2</td>\n",
       "      <td>1.422541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>7.360779</td>\n",
       "      <td>3.070822</td>\n",
       "      <td>3</td>\n",
       "      <td>2.422541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>7.362756</td>\n",
       "      <td>2.740006</td>\n",
       "      <td>2</td>\n",
       "      <td>2.091725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>8.176841</td>\n",
       "      <td>2.272086</td>\n",
       "      <td>1</td>\n",
       "      <td>1.623805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>8.646749</td>\n",
       "      <td>2.341008</td>\n",
       "      <td>2</td>\n",
       "      <td>1.692727</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2  col3      col4\n",
       "0   0.184218  1.437454     1  1.000000\n",
       "1   0.440494  1.454087     2  1.016633\n",
       "2   1.005748  1.688141     3  1.250687\n",
       "3   1.882521  3.248531     4  2.250687\n",
       "4   2.481725  2.600014     3  1.602171\n",
       "5   2.882183  3.177920     4  2.180076\n",
       "6   3.425273  2.826298     3  1.828455\n",
       "7   4.376522  3.920066     4  2.828455\n",
       "8   5.065992  3.835423     3  2.743812\n",
       "9   5.461152  5.194532     4  3.743812\n",
       "10  5.851369  4.492569     3  3.041849\n",
       "11  6.163467  5.636482     4  4.041849\n",
       "12  6.556232  5.893826     5  4.299193\n",
       "13  6.705486  4.878442     4  3.299193\n",
       "14  6.964199  2.899760     3  2.299193\n",
       "15  7.288179  2.023108     2  1.422541\n",
       "16  7.360779  3.070822     3  2.422541\n",
       "17  7.362756  2.740006     2  2.091725\n",
       "18  8.176841  2.272086     1  1.623805\n",
       "19  8.646749  2.341008     2  1.692727"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 计算列的累积加和，即累计频数\n",
    "df.cumsum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3e60c729-b14c-4e58-abeb-6a492cb7bd3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.042777560625632295"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 计算列中位数——直接算中位数median，50%分位数\n",
    "df['col2'].median()\n",
    "df['col2'].quantile()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "34d2308a-dc90-4299-9cb6-d7bef9235521",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.876773</td>\n",
       "      <td>1.560390</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.400458</td>\n",
       "      <td>0.577905</td>\n",
       "      <td>1</td>\n",
       "      <td>0.577905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.951249</td>\n",
       "      <td>1.093768</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.395159</td>\n",
       "      <td>1.359109</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.312098</td>\n",
       "      <td>1.143913</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.392765</td>\n",
       "      <td>0.257344</td>\n",
       "      <td>1</td>\n",
       "      <td>0.257344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.072600</td>\n",
       "      <td>1.047714</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.469908</td>\n",
       "      <td>0.068922</td>\n",
       "      <td>1</td>\n",
       "      <td>0.068922</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2  col3      col4\n",
       "0   0.184218  1.437454     1  1.000000\n",
       "1   0.256276  0.016633     1  0.016633\n",
       "2   0.565254  0.234054     1  0.234054\n",
       "3   0.876773  1.560390     1  1.000000\n",
       "5   0.400458  0.577905     1  0.577905\n",
       "7   0.951249  1.093768     1  1.000000\n",
       "9   0.395159  1.359109     1  1.000000\n",
       "11  0.312098  1.143913     1  1.000000\n",
       "12  0.392765  0.257344     1  0.257344\n",
       "16  0.072600  1.047714     1  1.000000\n",
       "19  0.469908  0.068922     1  0.068922"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 筛选数据——df[df[condition]]  df.query\n",
    "df[df['col2']>0]\n",
    "df.query('col2>0') # 用and连接"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "83c5edc4-22d1-4e53-8b1d-97dc93bfe2fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 转换字典列表网页等\n",
    "# df.head().to_dict()/df.to_dict()/df.to_list()/df.to_html()\n",
    "# 直接传入网页可以直接将代码放入"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "eb629ba8-e8cd-474a-8edf-beb96d672182",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 精准设置df单元格的值"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "26532b03-6592-437d-adc9-3bbc1da35828",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.876773</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.599204</td>\n",
       "      <td>-0.648517</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.648517</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       col1      col2  col3      col4\n",
       "0  0.184218  1.437454     1  1.000000\n",
       "1  0.256276  0.016633     1  0.016633\n",
       "2  0.565254  0.234054     1  0.234054\n",
       "3  0.876773       NaN     1  1.000000\n",
       "4  0.599204 -0.648517    -1 -0.648517"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "df.iloc[3,1]=np.nan # iloc是根据索引进行筛选与更改\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "8dff616c-a1f0-4c50-ab8a-2780868c201a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.876773</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.648517</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.648517</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       col1      col2  col3      col4\n",
       "0  0.184218  1.437454     1  1.000000\n",
       "1  0.256276  0.016633     1  0.016633\n",
       "2  0.565254  0.234054     1  0.234054\n",
       "3  0.876773       NaN     1  1.000000\n",
       "4       NaN -0.648517    -1 -0.648517"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[4,'col1']=np.nan # 可以直接更改，loc是标签\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "f0cc362e-e14c-4549-8993-16a50ce0bb71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.400458</td>\n",
       "      <td>0.577905</td>\n",
       "      <td>1</td>\n",
       "      <td>0.577905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.543089</td>\n",
       "      <td>-0.351622</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.351622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.951249</td>\n",
       "      <td>1.093768</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.689470</td>\n",
       "      <td>-0.084643</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.084643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.395159</td>\n",
       "      <td>1.359109</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.390217</td>\n",
       "      <td>-0.701963</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.701963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.312098</td>\n",
       "      <td>1.143913</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.392765</td>\n",
       "      <td>0.257344</td>\n",
       "      <td>1</td>\n",
       "      <td>0.257344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.149254</td>\n",
       "      <td>-1.015384</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.258713</td>\n",
       "      <td>-1.978682</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.323980</td>\n",
       "      <td>-0.876652</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.876652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.072600</td>\n",
       "      <td>1.047714</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.001977</td>\n",
       "      <td>-0.330816</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.330816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.814085</td>\n",
       "      <td>-0.467920</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.467920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.469908</td>\n",
       "      <td>0.068922</td>\n",
       "      <td>1</td>\n",
       "      <td>0.068922</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2  col3      col4\n",
       "0   0.184218  1.437454     1  1.000000\n",
       "1   0.256276  0.016633     1  0.016633\n",
       "2   0.565254  0.234054     1  0.234054\n",
       "5   0.400458  0.577905     1  0.577905\n",
       "6   0.543089 -0.351622    -1 -0.351622\n",
       "7   0.951249  1.093768     1  1.000000\n",
       "8   0.689470 -0.084643    -1 -0.084643\n",
       "9   0.395159  1.359109     1  1.000000\n",
       "10  0.390217 -0.701963    -1 -0.701963\n",
       "11  0.312098  1.143913     1  1.000000\n",
       "12  0.392765  0.257344     1  0.257344\n",
       "13  0.149254 -1.015384    -1 -1.000000\n",
       "14  0.258713 -1.978682    -1 -1.000000\n",
       "15  0.323980 -0.876652    -1 -0.876652\n",
       "16  0.072600  1.047714     1  1.000000\n",
       "17  0.001977 -0.330816    -1 -0.330816\n",
       "18  0.814085 -0.467920    -1 -0.467920\n",
       "19  0.469908  0.068922     1  0.068922"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 移除数值为空的行\n",
    "df1=df.dropna() # 函数默认任何一行只要有任何空值都移除\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "2858760a-4274-4a7e-89c7-dafae5f2338c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col1</th>\n",
       "      <th>col2</th>\n",
       "      <th>col3</th>\n",
       "      <th>col4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.184218</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.256276</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.565254</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.400458</td>\n",
       "      <td>0.577905</td>\n",
       "      <td>1</td>\n",
       "      <td>0.577905</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.543089</td>\n",
       "      <td>-0.351622</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.351622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.951249</td>\n",
       "      <td>1.093768</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.689470</td>\n",
       "      <td>-0.084643</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.084643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.395159</td>\n",
       "      <td>1.359109</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.390217</td>\n",
       "      <td>-0.701963</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.701963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.312098</td>\n",
       "      <td>1.143913</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.392765</td>\n",
       "      <td>0.257344</td>\n",
       "      <td>1</td>\n",
       "      <td>0.257344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.149254</td>\n",
       "      <td>-1.015384</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.258713</td>\n",
       "      <td>-1.978682</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.323980</td>\n",
       "      <td>-0.876652</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.876652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.072600</td>\n",
       "      <td>1.047714</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.001977</td>\n",
       "      <td>-0.330816</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.330816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.814085</td>\n",
       "      <td>-0.467920</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.467920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.469908</td>\n",
       "      <td>0.068922</td>\n",
       "      <td>1</td>\n",
       "      <td>0.068922</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col1      col2  col3      col4\n",
       "0   0.184218  1.437454     1  1.000000\n",
       "1   0.256276  0.016633     1  0.016633\n",
       "2   0.565254  0.234054     1  0.234054\n",
       "3   0.400458  0.577905     1  0.577905\n",
       "4   0.543089 -0.351622    -1 -0.351622\n",
       "5   0.951249  1.093768     1  1.000000\n",
       "6   0.689470 -0.084643    -1 -0.084643\n",
       "7   0.395159  1.359109     1  1.000000\n",
       "8   0.390217 -0.701963    -1 -0.701963\n",
       "9   0.312098  1.143913     1  1.000000\n",
       "10  0.392765  0.257344     1  0.257344\n",
       "11  0.149254 -1.015384    -1 -1.000000\n",
       "12  0.258713 -1.978682    -1 -1.000000\n",
       "13  0.323980 -0.876652    -1 -0.876652\n",
       "14  0.072600  1.047714     1  1.000000\n",
       "15  0.001977 -0.330816    -1 -0.330816\n",
       "16  0.814085 -0.467920    -1 -0.467920\n",
       "17  0.469908  0.068922     1  0.068922"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 移除df空值空行后重新设置索引列\n",
    "# df1=df1.reset_index() 此操作保留原索引\n",
    "df1=df1.reset_index(drop=True) # 去除原索引\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "31167459-e560-4e6b-be95-0839fc9376e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>col4</th>\n",
       "      <th>col3</th>\n",
       "      <th>col2</th>\n",
       "      <th>col1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.437454</td>\n",
       "      <td>0.184218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.016633</td>\n",
       "      <td>1</td>\n",
       "      <td>0.016633</td>\n",
       "      <td>0.256276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.234054</td>\n",
       "      <td>1</td>\n",
       "      <td>0.234054</td>\n",
       "      <td>0.565254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.577905</td>\n",
       "      <td>1</td>\n",
       "      <td>0.577905</td>\n",
       "      <td>0.400458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.351622</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.351622</td>\n",
       "      <td>0.543089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.093768</td>\n",
       "      <td>0.951249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>-0.084643</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.084643</td>\n",
       "      <td>0.689470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.359109</td>\n",
       "      <td>0.395159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>-0.701963</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.701963</td>\n",
       "      <td>0.390217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.143913</td>\n",
       "      <td>0.312098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.257344</td>\n",
       "      <td>1</td>\n",
       "      <td>0.257344</td>\n",
       "      <td>0.392765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.015384</td>\n",
       "      <td>0.149254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>-1.000000</td>\n",
       "      <td>-1</td>\n",
       "      <td>-1.978682</td>\n",
       "      <td>0.258713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>-0.876652</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.876652</td>\n",
       "      <td>0.323980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.047714</td>\n",
       "      <td>0.072600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>-0.330816</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.330816</td>\n",
       "      <td>0.001977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>-0.467920</td>\n",
       "      <td>-1</td>\n",
       "      <td>-0.467920</td>\n",
       "      <td>0.814085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.068922</td>\n",
       "      <td>1</td>\n",
       "      <td>0.068922</td>\n",
       "      <td>0.469908</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        col4  col3      col2      col1\n",
       "0   1.000000     1  1.437454  0.184218\n",
       "1   0.016633     1  0.016633  0.256276\n",
       "2   0.234054     1  0.234054  0.565254\n",
       "3   0.577905     1  0.577905  0.400458\n",
       "4  -0.351622    -1 -0.351622  0.543089\n",
       "5   1.000000     1  1.093768  0.951249\n",
       "6  -0.084643    -1 -0.084643  0.689470\n",
       "7   1.000000     1  1.359109  0.395159\n",
       "8  -0.701963    -1 -0.701963  0.390217\n",
       "9   1.000000     1  1.143913  0.312098\n",
       "10  0.257344     1  0.257344  0.392765\n",
       "11 -1.000000    -1 -1.015384  0.149254\n",
       "12 -1.000000    -1 -1.978682  0.258713\n",
       "13 -0.876652    -1 -0.876652  0.323980\n",
       "14  1.000000     1  1.047714  0.072600\n",
       "15 -0.330816    -1 -0.330816  0.001977\n",
       "16 -0.467920    -1 -0.467920  0.814085\n",
       "17  0.068922     1  0.068922  0.469908"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 修改列名顺序\n",
    "df1[['col4','col3','col2','col1']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "a5985a52-2b67-4319-b115-5a8aa5e190ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 列名都改成大写\n",
    "# df1.columns=[str(column).upper() for column in df.columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "afd1a090-af67-4d97-beb4-3760696b9b14",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5333df79-02e4-413b-b6f9-549621f0920a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "9149ffa1-549f-4907-ba22-0ed886314229",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 实战四、保险费用"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "60ef1c7a-fceb-4553-9346-49b6a621381f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>female</td>\n",
       "      <td>27.900</td>\n",
       "      <td>0</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "      <td>16884.92400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>18</td>\n",
       "      <td>male</td>\n",
       "      <td>33.770</td>\n",
       "      <td>1</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>1725.55230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28</td>\n",
       "      <td>male</td>\n",
       "      <td>33.000</td>\n",
       "      <td>3</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "      <td>4449.46200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33</td>\n",
       "      <td>male</td>\n",
       "      <td>22.705</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>21984.47061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>32</td>\n",
       "      <td>male</td>\n",
       "      <td>28.880</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "      <td>3866.85520</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age     sex     bmi  children smoker     region      charges\n",
       "0   19  female  27.900         0    yes  southwest  16884.92400\n",
       "1   18    male  33.770         1     no  southeast   1725.55230\n",
       "2   28    male  33.000         3     no  southeast   4449.46200\n",
       "3   33    male  22.705         0     no  northwest  21984.47061\n",
       "4   32    male  28.880         0     no  northwest   3866.85520"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv('ant-exercises-pandas-master/datas/insurance.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "e83eb9de-52b6-404d-b2b0-3a94a811544e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 检测重复数据行\n",
    "df.duplicated()\n",
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "74a0ba67-e143-42a5-8400-fb5ac3a784a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 删除重复行\n",
    "df=df.drop_duplicates()\n",
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "dbed2dcd-90d9-4d18-9e06-833d40ea996c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>female</td>\n",
       "      <td>yes</td>\n",
       "      <td>southwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>northeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1336</th>\n",
       "      <td>female</td>\n",
       "      <td>no</td>\n",
       "      <td>southwest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1337</th>\n",
       "      <td>female</td>\n",
       "      <td>yes</td>\n",
       "      <td>northwest</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1337 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         sex smoker     region\n",
       "0     female    yes  southwest\n",
       "1       male     no  southeast\n",
       "2       male     no  southeast\n",
       "3       male     no  northwest\n",
       "4       male     no  northwest\n",
       "...      ...    ...        ...\n",
       "1333    male     no  northwest\n",
       "1334  female     no  northeast\n",
       "1335  female     no  southeast\n",
       "1336  female     no  southwest\n",
       "1337  female    yes  northwest\n",
       "\n",
       "[1337 rows x 3 columns]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 筛选某类型数据\n",
    "df.select_dtypes(include=['object']) # 可以传多个类型"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "bfea7a9c-fbd5-41d9-bb34-d6ec1ea75187",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1337 entries, 0 to 1337\n",
      "Data columns (total 7 columns):\n",
      " #   Column    Non-Null Count  Dtype   \n",
      "---  ------    --------------  -----   \n",
      " 0   age       1337 non-null   int64   \n",
      " 1   sex       1337 non-null   category\n",
      " 2   bmi       1337 non-null   float64 \n",
      " 3   children  1337 non-null   int64   \n",
      " 4   smoker    1337 non-null   category\n",
      " 5   region    1337 non-null   category\n",
      " 6   charges   1337 non-null   float64 \n",
      "dtypes: category(3), float64(2), int64(2)\n",
      "memory usage: 56.6 KB\n"
     ]
    }
   ],
   "source": [
    "# 转换成分类类型cat\n",
    "columns=['sex','smoker','region']\n",
    "for column in columns:\n",
    "    df[column]=df[column].astype('category')\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "efa11748-e8e7-473d-b8eb-05c5f890add1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 将数据集分成两个数据集——类别数据集和数值数据集\n",
    "df1=df.select_dtypes(include=['category']).copy()\n",
    "df2=df.select_dtypes(include=['float','int']).copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "dec845da-db8d-4c44-9941-fb7dddff6b21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>smoker</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1337</td>\n",
       "      <td>1337</td>\n",
       "      <td>1337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>male</td>\n",
       "      <td>no</td>\n",
       "      <td>southeast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>675</td>\n",
       "      <td>1063</td>\n",
       "      <td>364</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sex smoker     region\n",
       "count   1337   1337       1337\n",
       "unique     2      2          4\n",
       "top     male     no  southeast\n",
       "freq     675   1063        364"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 类别类数据的描述分析\n",
    "df1.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "9b6ddd79-e1fb-490a-ad79-08e47267c039",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1337.000000</td>\n",
       "      <td>1337.000000</td>\n",
       "      <td>1337.000000</td>\n",
       "      <td>1337.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.222139</td>\n",
       "      <td>30.663452</td>\n",
       "      <td>1.095737</td>\n",
       "      <td>13279.121487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>14.044333</td>\n",
       "      <td>6.100468</td>\n",
       "      <td>1.205571</td>\n",
       "      <td>12110.359656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.960000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1121.873900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>26.290000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4746.344000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>39.000000</td>\n",
       "      <td>30.400000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9386.161300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>34.700000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>16657.717450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>53.130000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>63770.428010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age          bmi     children       charges\n",
       "count  1337.000000  1337.000000  1337.000000   1337.000000\n",
       "mean     39.222139    30.663452     1.095737  13279.121487\n",
       "std      14.044333     6.100468     1.205571  12110.359656\n",
       "min      18.000000    15.960000     0.000000   1121.873900\n",
       "25%      27.000000    26.290000     0.000000   4746.344000\n",
       "50%      39.000000    30.400000     1.000000   9386.161300\n",
       "75%      51.000000    34.700000     2.000000  16657.717450\n",
       "max      64.000000    53.130000     5.000000  63770.428010"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 数值类数据描述分析\n",
    "df2.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "7b63382e-d6a1-4730-b5f4-2bc63d0df646",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.222139</td>\n",
       "      <td>30.663452</td>\n",
       "      <td>1.095737</td>\n",
       "      <td>13279.121487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>14.044333</td>\n",
       "      <td>6.100468</td>\n",
       "      <td>1.205571</td>\n",
       "      <td>12110.359656</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            age        bmi  children       charges\n",
       "mean  39.222139  30.663452  1.095737  13279.121487\n",
       "std   14.044333   6.100468  1.205571  12110.359656"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 只取出数值类数据的均值方差\n",
    "# 矩阵转置取列\n",
    "df2_t=df2.describe().T\n",
    "df_need=df2_t[['mean','std']]\n",
    "df_need.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "0ea661a2-4701-4a78-b0d1-0764afe9e381",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1337 entries, 0 to 1337\n",
      "Data columns (total 9 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   age               1337 non-null   int64  \n",
      " 1   bmi               1337 non-null   float64\n",
      " 2   children          1337 non-null   int64  \n",
      " 3   charges           1337 non-null   float64\n",
      " 4   sex_male          1337 non-null   bool   \n",
      " 5   smoker_yes        1337 non-null   bool   \n",
      " 6   region_northwest  1337 non-null   bool   \n",
      " 7   region_southeast  1337 non-null   bool   \n",
      " 8   region_southwest  1337 non-null   bool   \n",
      "dtypes: bool(5), float64(2), int64(2)\n",
      "memory usage: 58.8 KB\n"
     ]
    }
   ],
   "source": [
    "# 虚拟变量dummies数据编码\n",
    "df_dummies=pd.get_dummies(df,drop_first=True)\n",
    "df_dummies.info()\n",
    "# 虚拟变量设定要少于被设置的变量本身，故性别留下男性，男性与女性是推导关系，皆出现会导致机器学习问题"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "d48d42f3-d0b2-4f52-9d25-1a104aef2e2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>bmi</th>\n",
       "      <th>children</th>\n",
       "      <th>charges</th>\n",
       "      <th>sex_male</th>\n",
       "      <th>smoker_yes</th>\n",
       "      <th>region_northwest</th>\n",
       "      <th>region_southeast</th>\n",
       "      <th>region_southwest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.109344</td>\n",
       "      <td>0.041536</td>\n",
       "      <td>0.298308</td>\n",
       "      <td>-0.019814</td>\n",
       "      <td>-0.025587</td>\n",
       "      <td>0.001495</td>\n",
       "      <td>-0.012311</td>\n",
       "      <td>0.009415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bmi</th>\n",
       "      <td>0.109344</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.012755</td>\n",
       "      <td>0.198401</td>\n",
       "      <td>0.046397</td>\n",
       "      <td>0.003746</td>\n",
       "      <td>-0.136138</td>\n",
       "      <td>0.270057</td>\n",
       "      <td>-0.006211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <td>0.041536</td>\n",
       "      <td>0.012755</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.067389</td>\n",
       "      <td>0.017848</td>\n",
       "      <td>0.007331</td>\n",
       "      <td>0.026044</td>\n",
       "      <td>-0.023492</td>\n",
       "      <td>0.021538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>charges</th>\n",
       "      <td>0.298308</td>\n",
       "      <td>0.198401</td>\n",
       "      <td>0.067389</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.058044</td>\n",
       "      <td>0.787234</td>\n",
       "      <td>-0.038695</td>\n",
       "      <td>0.073578</td>\n",
       "      <td>-0.043637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sex_male</th>\n",
       "      <td>-0.019814</td>\n",
       "      <td>0.046397</td>\n",
       "      <td>0.017848</td>\n",
       "      <td>0.058044</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.076596</td>\n",
       "      <td>-0.012482</td>\n",
       "      <td>0.017578</td>\n",
       "      <td>-0.003767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>smoker_yes</th>\n",
       "      <td>-0.025587</td>\n",
       "      <td>0.003746</td>\n",
       "      <td>0.007331</td>\n",
       "      <td>0.787234</td>\n",
       "      <td>0.076596</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.036321</td>\n",
       "      <td>0.068282</td>\n",
       "      <td>-0.037168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_northwest</th>\n",
       "      <td>0.001495</td>\n",
       "      <td>-0.136138</td>\n",
       "      <td>0.026044</td>\n",
       "      <td>-0.038695</td>\n",
       "      <td>-0.012482</td>\n",
       "      <td>-0.036321</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.345909</td>\n",
       "      <td>-0.320493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_southeast</th>\n",
       "      <td>-0.012311</td>\n",
       "      <td>0.270057</td>\n",
       "      <td>-0.023492</td>\n",
       "      <td>0.073578</td>\n",
       "      <td>0.017578</td>\n",
       "      <td>0.068282</td>\n",
       "      <td>-0.345909</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.346614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_southwest</th>\n",
       "      <td>0.009415</td>\n",
       "      <td>-0.006211</td>\n",
       "      <td>0.021538</td>\n",
       "      <td>-0.043637</td>\n",
       "      <td>-0.003767</td>\n",
       "      <td>-0.037168</td>\n",
       "      <td>-0.320493</td>\n",
       "      <td>-0.346614</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       age       bmi  children   charges  sex_male  \\\n",
       "age               1.000000  0.109344  0.041536  0.298308 -0.019814   \n",
       "bmi               0.109344  1.000000  0.012755  0.198401  0.046397   \n",
       "children          0.041536  0.012755  1.000000  0.067389  0.017848   \n",
       "charges           0.298308  0.198401  0.067389  1.000000  0.058044   \n",
       "sex_male         -0.019814  0.046397  0.017848  0.058044  1.000000   \n",
       "smoker_yes       -0.025587  0.003746  0.007331  0.787234  0.076596   \n",
       "region_northwest  0.001495 -0.136138  0.026044 -0.038695 -0.012482   \n",
       "region_southeast -0.012311  0.270057 -0.023492  0.073578  0.017578   \n",
       "region_southwest  0.009415 -0.006211  0.021538 -0.043637 -0.003767   \n",
       "\n",
       "                  smoker_yes  region_northwest  region_southeast  \\\n",
       "age                -0.025587          0.001495         -0.012311   \n",
       "bmi                 0.003746         -0.136138          0.270057   \n",
       "children            0.007331          0.026044         -0.023492   \n",
       "charges             0.787234         -0.038695          0.073578   \n",
       "sex_male            0.076596         -0.012482          0.017578   \n",
       "smoker_yes          1.000000         -0.036321          0.068282   \n",
       "region_northwest   -0.036321          1.000000         -0.345909   \n",
       "region_southeast    0.068282         -0.345909          1.000000   \n",
       "region_southwest   -0.037168         -0.320493         -0.346614   \n",
       "\n",
       "                  region_southwest  \n",
       "age                       0.009415  \n",
       "bmi                      -0.006211  \n",
       "children                  0.021538  \n",
       "charges                  -0.043637  \n",
       "sex_male                 -0.003767  \n",
       "smoker_yes               -0.037168  \n",
       "region_northwest         -0.320493  \n",
       "region_southeast         -0.346614  \n",
       "region_southwest          1.000000  "
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 相关性矩阵\n",
    "corr=df_dummies.corr()\n",
    "corr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "79ba546b-99c6-4130-b99e-ae04ea7c82e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>charges</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>charges</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>smoker_yes</th>\n",
       "      <td>0.787234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>0.298308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bmi</th>\n",
       "      <td>0.198401</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_southeast</th>\n",
       "      <td>0.073578</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <td>0.067389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sex_male</th>\n",
       "      <td>0.058044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_northwest</th>\n",
       "      <td>-0.038695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_southwest</th>\n",
       "      <td>-0.043637</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   charges\n",
       "charges           1.000000\n",
       "smoker_yes        0.787234\n",
       "age               0.298308\n",
       "bmi               0.198401\n",
       "region_southeast  0.073578\n",
       "children          0.067389\n",
       "sex_male          0.058044\n",
       "region_northwest -0.038695\n",
       "region_southwest -0.043637"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 相关性矩阵的筛选\n",
    "# charges和哪些列最相关\n",
    "corr[['charges']].sort_values(by='charges',ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b4350e10-67f9-4112-8365-0f74612ad3aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 分离特征数据以及标签数据\n",
    "# 机器学习中分为特征数据与标签数据，使用特征数据进行训练并预测标签数据\n",
    "# charges为预测目标，其他数据为特征数据\n",
    "data=df_dummies.copy() # 保证原始数据不受影响\n",
    "target=data.pop('charges') # 从原始数据中分离出来的charges\n",
    "# 此时就将数据进行分离，data即特征数据，下一步将标签数据分离"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ecb82bd8-34f5-4e8e-a0f4-ce1622670ec9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d0da984c-1183-4325-9524-93bb7bbbfc8b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5239bf39-85c5-4345-9744-47f42f169790",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 实战五、处理json数据\n",
    "# json数据可能是字典嵌套"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "4a48a722-5a0b-4210-a51e-8d62d02211ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>profile</th>\n",
       "      <th>time</th>\n",
       "      <th>price</th>\n",
       "      <th>change</th>\n",
       "      <th>pct_change</th>\n",
       "      <th>reference_price</th>\n",
       "      <th>open</th>\n",
       "      <th>low</th>\n",
       "      <th>high</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>^AEX (Holandia)</td>\n",
       "      <td>14:12</td>\n",
       "      <td>548.73</td>\n",
       "      <td>7.95</td>\n",
       "      <td>(+1.47%)</td>\n",
       "      <td>540.78</td>\n",
       "      <td>546.55</td>\n",
       "      <td>544.72</td>\n",
       "      <td>550.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>^ATX (Austria)</td>\n",
       "      <td>14:11</td>\n",
       "      <td>2147.90</td>\n",
       "      <td>17.68</td>\n",
       "      <td>(+0.83%)</td>\n",
       "      <td>2130.22</td>\n",
       "      <td>2131.47</td>\n",
       "      <td>2118.71</td>\n",
       "      <td>2163.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>^ATXC (Grecja)</td>\n",
       "      <td>14:13</td>\n",
       "      <td>621.82</td>\n",
       "      <td>-2.80</td>\n",
       "      <td>(-0.45%)</td>\n",
       "      <td>624.62</td>\n",
       "      <td>627.48</td>\n",
       "      <td>621.82</td>\n",
       "      <td>631.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>^BEL20 (Belgia)</td>\n",
       "      <td>14:11</td>\n",
       "      <td>3251.39</td>\n",
       "      <td>30.51</td>\n",
       "      <td>(+0.95%)</td>\n",
       "      <td>3220.88</td>\n",
       "      <td>3252.21</td>\n",
       "      <td>3228.77</td>\n",
       "      <td>3266.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>^BUX (Węgry)</td>\n",
       "      <td>14:12</td>\n",
       "      <td>32831.01</td>\n",
       "      <td>534.27</td>\n",
       "      <td>(+1.65%)</td>\n",
       "      <td>32296.74</td>\n",
       "      <td>32421.05</td>\n",
       "      <td>32421.05</td>\n",
       "      <td>32865.43</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           profile   time     price  change pct_change  reference_price  \\\n",
       "0  ^AEX (Holandia)  14:12    548.73    7.95   (+1.47%)           540.78   \n",
       "1   ^ATX (Austria)  14:11   2147.90   17.68   (+0.83%)          2130.22   \n",
       "2   ^ATXC (Grecja)  14:13    621.82   -2.80   (-0.45%)           624.62   \n",
       "3  ^BEL20 (Belgia)  14:11   3251.39   30.51   (+0.95%)          3220.88   \n",
       "4     ^BUX (Węgry)  14:12  32831.01  534.27   (+1.65%)         32296.74   \n",
       "\n",
       "       open       low      high  \n",
       "0    546.55    544.72    550.72  \n",
       "1   2131.47   2118.71   2163.92  \n",
       "2    627.48    621.82    631.70  \n",
       "3   3252.21   3228.77   3266.11  \n",
       "4  32421.05  32421.05  32865.43  "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_json('ant-exercises-pandas-master/datas/market.json')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "6aa2e867-591a-412d-9e40-e749aac389b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>profile</th>\n",
       "      <th>time</th>\n",
       "      <th>price</th>\n",
       "      <th>change</th>\n",
       "      <th>pct_change</th>\n",
       "      <th>reference_price</th>\n",
       "      <th>open</th>\n",
       "      <th>low</th>\n",
       "      <th>high</th>\n",
       "      <th>country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>^AEX (Holandia)</td>\n",
       "      <td>14:12</td>\n",
       "      <td>548.73</td>\n",
       "      <td>7.95</td>\n",
       "      <td>(+1.47%)</td>\n",
       "      <td>540.78</td>\n",
       "      <td>546.55</td>\n",
       "      <td>544.72</td>\n",
       "      <td>550.72</td>\n",
       "      <td>Holandia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>^ATX (Austria)</td>\n",
       "      <td>14:11</td>\n",
       "      <td>2147.90</td>\n",
       "      <td>17.68</td>\n",
       "      <td>(+0.83%)</td>\n",
       "      <td>2130.22</td>\n",
       "      <td>2131.47</td>\n",
       "      <td>2118.71</td>\n",
       "      <td>2163.92</td>\n",
       "      <td>Austria</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>^ATXC (Grecja)</td>\n",
       "      <td>14:13</td>\n",
       "      <td>621.82</td>\n",
       "      <td>-2.80</td>\n",
       "      <td>(-0.45%)</td>\n",
       "      <td>624.62</td>\n",
       "      <td>627.48</td>\n",
       "      <td>621.82</td>\n",
       "      <td>631.70</td>\n",
       "      <td>Grecja</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>^BEL20 (Belgia)</td>\n",
       "      <td>14:11</td>\n",
       "      <td>3251.39</td>\n",
       "      <td>30.51</td>\n",
       "      <td>(+0.95%)</td>\n",
       "      <td>3220.88</td>\n",
       "      <td>3252.21</td>\n",
       "      <td>3228.77</td>\n",
       "      <td>3266.11</td>\n",
       "      <td>Belgia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>^BUX (Węgry)</td>\n",
       "      <td>14:12</td>\n",
       "      <td>32831.01</td>\n",
       "      <td>534.27</td>\n",
       "      <td>(+1.65%)</td>\n",
       "      <td>32296.74</td>\n",
       "      <td>32421.05</td>\n",
       "      <td>32421.05</td>\n",
       "      <td>32865.43</td>\n",
       "      <td>Węgry</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           profile   time     price  change pct_change  reference_price  \\\n",
       "0  ^AEX (Holandia)  14:12    548.73    7.95   (+1.47%)           540.78   \n",
       "1   ^ATX (Austria)  14:11   2147.90   17.68   (+0.83%)          2130.22   \n",
       "2   ^ATXC (Grecja)  14:13    621.82   -2.80   (-0.45%)           624.62   \n",
       "3  ^BEL20 (Belgia)  14:11   3251.39   30.51   (+0.95%)          3220.88   \n",
       "4     ^BUX (Węgry)  14:12  32831.01  534.27   (+1.65%)         32296.74   \n",
       "\n",
       "       open       low      high   country  \n",
       "0    546.55    544.72    550.72  Holandia  \n",
       "1   2131.47   2118.71   2163.92   Austria  \n",
       "2    627.48    621.82    631.70    Grecja  \n",
       "3   3252.21   3228.77   3266.11    Belgia  \n",
       "4  32421.05  32421.05  32865.43     Węgry  "
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 字符串析出国家名称——提取出profile的国家名称\n",
    "df['country'] = df['profile'].map(\n",
    "    lambda x: x.split('(')[1].split(')')[0]) # 获取左括号后面的内容和获取右括号前面的内容\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "fb4b6dbb-d758-4b65-8591-4360485fc5fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "country\n",
       "Rosja              2\n",
       "Wielka Brytania    2\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 统计出现多于一次的字符串国家\n",
    "df['country'].value_counts()\n",
    "# 筛选\n",
    "count=df['country'].value_counts()\n",
    "count[count>1] # 针对对象实现多于一次的对象的针对性导出"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "31838b8e-f7a1-464d-b71f-4c6dfdefaec3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     1.47\n",
       "1     0.83\n",
       "2     0.45\n",
       "3     0.95\n",
       "4     1.65\n",
       "5     1.40\n",
       "6     1.30\n",
       "7     1.99\n",
       "8     1.29\n",
       "9     0.98\n",
       "10    1.61\n",
       "11    0.04\n",
       "12    0.22\n",
       "13    1.15\n",
       "14    0.18\n",
       "15    0.05\n",
       "16    0.29\n",
       "17    0.18\n",
       "18    0.14\n",
       "19    0.15\n",
       "20    0.75\n",
       "21    0.17\n",
       "Name: pct_change, dtype: float64"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 转换数据类型pct_change\n",
    "df['pct_change'].map(\n",
    "    lambda x:float(x[2:6])\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "7bc71944-6572-4288-b97d-4513a20c09d0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "profile            ^ATXC (Grecja)\n",
       "time                        14:13\n",
       "price                      621.82\n",
       "change                       -2.8\n",
       "pct_change               (-0.45%)\n",
       "reference_price            624.62\n",
       "open                       627.48\n",
       "low                        621.82\n",
       "high                        631.7\n",
       "country                    Grecja\n",
       "Name: 2, dtype: object"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 找出最值所在的行\n",
    "# 函数argmax  argmin直接返回最大值和最小值所在的索引，根据索引找出行\n",
    "df.iloc[df['pct_change'].argmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "56dc1106-927e-4751-80ef-caa673cad45b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "profile            ^OMXC20 (Dania)\n",
       "time                         14:27\n",
       "price                      1336.57\n",
       "change                        0.58\n",
       "pct_change                (+0.04%)\n",
       "reference_price            1335.99\n",
       "open                       1338.82\n",
       "low                        1322.42\n",
       "high                       1338.82\n",
       "country                      Dania\n",
       "Name: 11, dtype: object"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[df['pct_change'].argmin()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1c721d0-6043-429d-a623-1e9e95ec2c08",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "19ac2728-2b78-45fc-9f87-52d8c0ffaea7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "1805de41-a330-49a4-9ed4-8aa739a29f06",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 实战六、两组股票数据比较\n",
    "import pandas as pd\n",
    "bidu=pd.read_csv('ant-exercises-pandas-master/datas/stock.BIDU.csv',index_col=0)\n",
    "iq=pd.read_csv('ant-exercises-pandas-master/datas/stock.IQ.csv',index_col=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "d7fa5b1b-1dd8-4c78-910d-b2663a63be1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iq_open</th>\n",
       "      <th>iq_high</th>\n",
       "      <th>iq_low</th>\n",
       "      <th>iq_close</th>\n",
       "      <th>iq_volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-10-13</th>\n",
       "      <td>9.26</td>\n",
       "      <td>9.46</td>\n",
       "      <td>9.06</td>\n",
       "      <td>9.41</td>\n",
       "      <td>5353117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-12</th>\n",
       "      <td>8.93</td>\n",
       "      <td>9.23</td>\n",
       "      <td>8.85</td>\n",
       "      <td>9.23</td>\n",
       "      <td>4954762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-11</th>\n",
       "      <td>9.05</td>\n",
       "      <td>9.22</td>\n",
       "      <td>8.64</td>\n",
       "      <td>9.00</td>\n",
       "      <td>8287285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-08</th>\n",
       "      <td>8.27</td>\n",
       "      <td>8.85</td>\n",
       "      <td>8.12</td>\n",
       "      <td>8.79</td>\n",
       "      <td>10476118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-07</th>\n",
       "      <td>7.80</td>\n",
       "      <td>8.38</td>\n",
       "      <td>7.72</td>\n",
       "      <td>8.17</td>\n",
       "      <td>9984313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-08</th>\n",
       "      <td>19.16</td>\n",
       "      <td>19.65</td>\n",
       "      <td>18.74</td>\n",
       "      <td>19.61</td>\n",
       "      <td>9233027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-07</th>\n",
       "      <td>18.61</td>\n",
       "      <td>18.90</td>\n",
       "      <td>18.46</td>\n",
       "      <td>18.82</td>\n",
       "      <td>8024387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>18.49</td>\n",
       "      <td>19.07</td>\n",
       "      <td>18.40</td>\n",
       "      <td>18.61</td>\n",
       "      <td>10356442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>18.29</td>\n",
       "      <td>18.65</td>\n",
       "      <td>17.93</td>\n",
       "      <td>18.64</td>\n",
       "      <td>11879797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>17.60</td>\n",
       "      <td>18.24</td>\n",
       "      <td>17.51</td>\n",
       "      <td>18.04</td>\n",
       "      <td>10472688</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>196 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            iq_open  iq_high  iq_low  iq_close  iq_volume\n",
       "Date                                                     \n",
       "2021-10-13     9.26     9.46    9.06      9.41    5353117\n",
       "2021-10-12     8.93     9.23    8.85      9.23    4954762\n",
       "2021-10-11     9.05     9.22    8.64      9.00    8287285\n",
       "2021-10-08     8.27     8.85    8.12      8.79   10476118\n",
       "2021-10-07     7.80     8.38    7.72      8.17    9984313\n",
       "...             ...      ...     ...       ...        ...\n",
       "2021-01-08    19.16    19.65   18.74     19.61    9233027\n",
       "2021-01-07    18.61    18.90   18.46     18.82    8024387\n",
       "2021-01-06    18.49    19.07   18.40     18.61   10356442\n",
       "2021-01-05    18.29    18.65   17.93     18.64   11879797\n",
       "2021-01-04    17.60    18.24   17.51     18.04   10472688\n",
       "\n",
       "[196 rows x 5 columns]"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 分别给数据添加前缀\n",
    "bidu.columns=['bidu_'+col.lower() for col in bidu.columns]\n",
    "iq.columns=['iq_'+col.lower() for col in iq.columns]\n",
    "iq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "a8fb3773-bb12-4ada-8a5f-230d388c2f66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bidu_open</th>\n",
       "      <th>bidu_high</th>\n",
       "      <th>bidu_low</th>\n",
       "      <th>bidu_close</th>\n",
       "      <th>bidu_volume</th>\n",
       "      <th>iq_open</th>\n",
       "      <th>iq_high</th>\n",
       "      <th>iq_low</th>\n",
       "      <th>iq_close</th>\n",
       "      <th>iq_volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-10-13</th>\n",
       "      <td>161.46</td>\n",
       "      <td>164.33</td>\n",
       "      <td>160.72</td>\n",
       "      <td>163.85</td>\n",
       "      <td>2580069</td>\n",
       "      <td>9.26</td>\n",
       "      <td>9.46</td>\n",
       "      <td>9.06</td>\n",
       "      <td>9.41</td>\n",
       "      <td>5353117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-12</th>\n",
       "      <td>161.40</td>\n",
       "      <td>164.23</td>\n",
       "      <td>158.85</td>\n",
       "      <td>159.47</td>\n",
       "      <td>2408508</td>\n",
       "      <td>8.93</td>\n",
       "      <td>9.23</td>\n",
       "      <td>8.85</td>\n",
       "      <td>9.23</td>\n",
       "      <td>4954762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-11</th>\n",
       "      <td>164.90</td>\n",
       "      <td>166.92</td>\n",
       "      <td>162.16</td>\n",
       "      <td>162.16</td>\n",
       "      <td>3637188</td>\n",
       "      <td>9.05</td>\n",
       "      <td>9.22</td>\n",
       "      <td>8.64</td>\n",
       "      <td>9.00</td>\n",
       "      <td>8287285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-08</th>\n",
       "      <td>158.00</td>\n",
       "      <td>162.30</td>\n",
       "      <td>156.90</td>\n",
       "      <td>162.09</td>\n",
       "      <td>3651890</td>\n",
       "      <td>8.27</td>\n",
       "      <td>8.85</td>\n",
       "      <td>8.12</td>\n",
       "      <td>8.79</td>\n",
       "      <td>10476118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-07</th>\n",
       "      <td>154.64</td>\n",
       "      <td>158.30</td>\n",
       "      <td>153.70</td>\n",
       "      <td>156.55</td>\n",
       "      <td>3967590</td>\n",
       "      <td>7.80</td>\n",
       "      <td>8.38</td>\n",
       "      <td>7.72</td>\n",
       "      <td>8.17</td>\n",
       "      <td>9984313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-08</th>\n",
       "      <td>227.06</td>\n",
       "      <td>241.00</td>\n",
       "      <td>218.00</td>\n",
       "      <td>240.25</td>\n",
       "      <td>22589375</td>\n",
       "      <td>19.16</td>\n",
       "      <td>19.65</td>\n",
       "      <td>18.74</td>\n",
       "      <td>19.61</td>\n",
       "      <td>9233027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-07</th>\n",
       "      <td>207.71</td>\n",
       "      <td>213.39</td>\n",
       "      <td>204.30</td>\n",
       "      <td>207.89</td>\n",
       "      <td>10960266</td>\n",
       "      <td>18.61</td>\n",
       "      <td>18.90</td>\n",
       "      <td>18.46</td>\n",
       "      <td>18.82</td>\n",
       "      <td>8024387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>212.78</td>\n",
       "      <td>213.34</td>\n",
       "      <td>203.62</td>\n",
       "      <td>203.97</td>\n",
       "      <td>8361281</td>\n",
       "      <td>18.49</td>\n",
       "      <td>19.07</td>\n",
       "      <td>18.40</td>\n",
       "      <td>18.61</td>\n",
       "      <td>10356442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>213.43</td>\n",
       "      <td>218.11</td>\n",
       "      <td>212.13</td>\n",
       "      <td>214.00</td>\n",
       "      <td>7370078</td>\n",
       "      <td>18.29</td>\n",
       "      <td>18.65</td>\n",
       "      <td>17.93</td>\n",
       "      <td>18.64</td>\n",
       "      <td>11879797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>219.51</td>\n",
       "      <td>227.58</td>\n",
       "      <td>213.76</td>\n",
       "      <td>216.80</td>\n",
       "      <td>12383336</td>\n",
       "      <td>17.60</td>\n",
       "      <td>18.24</td>\n",
       "      <td>17.51</td>\n",
       "      <td>18.04</td>\n",
       "      <td>10472688</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>196 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            bidu_open  bidu_high  bidu_low  bidu_close  bidu_volume  iq_open  \\\n",
       "Date                                                                           \n",
       "2021-10-13     161.46     164.33    160.72      163.85      2580069     9.26   \n",
       "2021-10-12     161.40     164.23    158.85      159.47      2408508     8.93   \n",
       "2021-10-11     164.90     166.92    162.16      162.16      3637188     9.05   \n",
       "2021-10-08     158.00     162.30    156.90      162.09      3651890     8.27   \n",
       "2021-10-07     154.64     158.30    153.70      156.55      3967590     7.80   \n",
       "...               ...        ...       ...         ...          ...      ...   \n",
       "2021-01-08     227.06     241.00    218.00      240.25     22589375    19.16   \n",
       "2021-01-07     207.71     213.39    204.30      207.89     10960266    18.61   \n",
       "2021-01-06     212.78     213.34    203.62      203.97      8361281    18.49   \n",
       "2021-01-05     213.43     218.11    212.13      214.00      7370078    18.29   \n",
       "2021-01-04     219.51     227.58    213.76      216.80     12383336    17.60   \n",
       "\n",
       "            iq_high  iq_low  iq_close  iq_volume  \n",
       "Date                                              \n",
       "2021-10-13     9.46    9.06      9.41    5353117  \n",
       "2021-10-12     9.23    8.85      9.23    4954762  \n",
       "2021-10-11     9.22    8.64      9.00    8287285  \n",
       "2021-10-08     8.85    8.12      8.79   10476118  \n",
       "2021-10-07     8.38    7.72      8.17    9984313  \n",
       "...             ...     ...       ...        ...  \n",
       "2021-01-08    19.65   18.74     19.61    9233027  \n",
       "2021-01-07    18.90   18.46     18.82    8024387  \n",
       "2021-01-06    19.07   18.40     18.61   10356442  \n",
       "2021-01-05    18.65   17.93     18.64   11879797  \n",
       "2021-01-04    18.24   17.51     18.04   10472688  \n",
       "\n",
       "[196 rows x 10 columns]"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 按照日期关联两个df 列拼接\n",
    "df=pd.concat([bidu,iq],axis=1)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "31c5cd75-3098-4ea8-8b2c-46e17e5dbe73",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 筛选列\n",
    "df_pick=df[['bidu_open','bidu_close','iq_open','iq_close']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "6eeee335-8e8c-4234-979c-15413c1ccb0a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\wenme\\AppData\\Local\\Temp\\ipykernel_5848\\671924454.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_pick['zhangdie_bd']=(df_pick['bidu_close']-df_pick['bidu_open'])/df_pick['bidu_open']\n",
      "C:\\Users\\wenme\\AppData\\Local\\Temp\\ipykernel_5848\\671924454.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_pick['zhangdie_iq']=(df_pick['iq_close']-df_pick['iq_open'])/df_pick['iq_open']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bidu_open</th>\n",
       "      <th>bidu_close</th>\n",
       "      <th>iq_open</th>\n",
       "      <th>iq_close</th>\n",
       "      <th>zhangdie_bd</th>\n",
       "      <th>zhangdie_iq</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-10-13</th>\n",
       "      <td>161.46</td>\n",
       "      <td>163.85</td>\n",
       "      <td>9.26</td>\n",
       "      <td>9.41</td>\n",
       "      <td>0.014802</td>\n",
       "      <td>0.016199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-12</th>\n",
       "      <td>161.40</td>\n",
       "      <td>159.47</td>\n",
       "      <td>8.93</td>\n",
       "      <td>9.23</td>\n",
       "      <td>-0.011958</td>\n",
       "      <td>0.033595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-11</th>\n",
       "      <td>164.90</td>\n",
       "      <td>162.16</td>\n",
       "      <td>9.05</td>\n",
       "      <td>9.00</td>\n",
       "      <td>-0.016616</td>\n",
       "      <td>-0.005525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-08</th>\n",
       "      <td>158.00</td>\n",
       "      <td>162.09</td>\n",
       "      <td>8.27</td>\n",
       "      <td>8.79</td>\n",
       "      <td>0.025886</td>\n",
       "      <td>0.062878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-07</th>\n",
       "      <td>154.64</td>\n",
       "      <td>156.55</td>\n",
       "      <td>7.80</td>\n",
       "      <td>8.17</td>\n",
       "      <td>0.012351</td>\n",
       "      <td>0.047436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-08</th>\n",
       "      <td>227.06</td>\n",
       "      <td>240.25</td>\n",
       "      <td>19.16</td>\n",
       "      <td>19.61</td>\n",
       "      <td>0.058090</td>\n",
       "      <td>0.023486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-07</th>\n",
       "      <td>207.71</td>\n",
       "      <td>207.89</td>\n",
       "      <td>18.61</td>\n",
       "      <td>18.82</td>\n",
       "      <td>0.000867</td>\n",
       "      <td>0.011284</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>212.78</td>\n",
       "      <td>203.97</td>\n",
       "      <td>18.49</td>\n",
       "      <td>18.61</td>\n",
       "      <td>-0.041404</td>\n",
       "      <td>0.006490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>213.43</td>\n",
       "      <td>214.00</td>\n",
       "      <td>18.29</td>\n",
       "      <td>18.64</td>\n",
       "      <td>0.002671</td>\n",
       "      <td>0.019136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>219.51</td>\n",
       "      <td>216.80</td>\n",
       "      <td>17.60</td>\n",
       "      <td>18.04</td>\n",
       "      <td>-0.012346</td>\n",
       "      <td>0.025000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>196 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            bidu_open  bidu_close  iq_open  iq_close  zhangdie_bd  zhangdie_iq\n",
       "Date                                                                          \n",
       "2021-10-13     161.46      163.85     9.26      9.41     0.014802     0.016199\n",
       "2021-10-12     161.40      159.47     8.93      9.23    -0.011958     0.033595\n",
       "2021-10-11     164.90      162.16     9.05      9.00    -0.016616    -0.005525\n",
       "2021-10-08     158.00      162.09     8.27      8.79     0.025886     0.062878\n",
       "2021-10-07     154.64      156.55     7.80      8.17     0.012351     0.047436\n",
       "...               ...         ...      ...       ...          ...          ...\n",
       "2021-01-08     227.06      240.25    19.16     19.61     0.058090     0.023486\n",
       "2021-01-07     207.71      207.89    18.61     18.82     0.000867     0.011284\n",
       "2021-01-06     212.78      203.97    18.49     18.61    -0.041404     0.006490\n",
       "2021-01-05     213.43      214.00    18.29     18.64     0.002671     0.019136\n",
       "2021-01-04     219.51      216.80    17.60     18.04    -0.012346     0.025000\n",
       "\n",
       "[196 rows x 6 columns]"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 计算当日股票涨跌幅（收盘价减去开盘价除以开盘价）\n",
    "df_pick['zhangdie_bd']=(df_pick['bidu_close']-df_pick['bidu_open'])/df_pick['bidu_open']\n",
    "df_pick['zhangdie_iq']=(df_pick['iq_close']-df_pick['iq_open'])/df_pick['iq_open']\n",
    "df_pick"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "5efef85a-6cc5-450f-8f48-778f02e4512f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\wenme\\AppData\\Local\\Temp\\ipykernel_5848\\1499387416.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df_pick['similarity']=(df_pick['zhangdie_bd']*df_pick['zhangdie_iq']>0)*1\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bidu_open</th>\n",
       "      <th>bidu_close</th>\n",
       "      <th>iq_open</th>\n",
       "      <th>iq_close</th>\n",
       "      <th>zhangdie_bd</th>\n",
       "      <th>zhangdie_iq</th>\n",
       "      <th>similarity</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-10-13</th>\n",
       "      <td>161.46</td>\n",
       "      <td>163.85</td>\n",
       "      <td>9.26</td>\n",
       "      <td>9.41</td>\n",
       "      <td>0.014802</td>\n",
       "      <td>0.016199</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-12</th>\n",
       "      <td>161.40</td>\n",
       "      <td>159.47</td>\n",
       "      <td>8.93</td>\n",
       "      <td>9.23</td>\n",
       "      <td>-0.011958</td>\n",
       "      <td>0.033595</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-11</th>\n",
       "      <td>164.90</td>\n",
       "      <td>162.16</td>\n",
       "      <td>9.05</td>\n",
       "      <td>9.00</td>\n",
       "      <td>-0.016616</td>\n",
       "      <td>-0.005525</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-08</th>\n",
       "      <td>158.00</td>\n",
       "      <td>162.09</td>\n",
       "      <td>8.27</td>\n",
       "      <td>8.79</td>\n",
       "      <td>0.025886</td>\n",
       "      <td>0.062878</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-10-07</th>\n",
       "      <td>154.64</td>\n",
       "      <td>156.55</td>\n",
       "      <td>7.80</td>\n",
       "      <td>8.17</td>\n",
       "      <td>0.012351</td>\n",
       "      <td>0.047436</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-08</th>\n",
       "      <td>227.06</td>\n",
       "      <td>240.25</td>\n",
       "      <td>19.16</td>\n",
       "      <td>19.61</td>\n",
       "      <td>0.058090</td>\n",
       "      <td>0.023486</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-07</th>\n",
       "      <td>207.71</td>\n",
       "      <td>207.89</td>\n",
       "      <td>18.61</td>\n",
       "      <td>18.82</td>\n",
       "      <td>0.000867</td>\n",
       "      <td>0.011284</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>212.78</td>\n",
       "      <td>203.97</td>\n",
       "      <td>18.49</td>\n",
       "      <td>18.61</td>\n",
       "      <td>-0.041404</td>\n",
       "      <td>0.006490</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>213.43</td>\n",
       "      <td>214.00</td>\n",
       "      <td>18.29</td>\n",
       "      <td>18.64</td>\n",
       "      <td>0.002671</td>\n",
       "      <td>0.019136</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>219.51</td>\n",
       "      <td>216.80</td>\n",
       "      <td>17.60</td>\n",
       "      <td>18.04</td>\n",
       "      <td>-0.012346</td>\n",
       "      <td>0.025000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>196 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            bidu_open  bidu_close  iq_open  iq_close  zhangdie_bd  \\\n",
       "Date                                                                \n",
       "2021-10-13     161.46      163.85     9.26      9.41     0.014802   \n",
       "2021-10-12     161.40      159.47     8.93      9.23    -0.011958   \n",
       "2021-10-11     164.90      162.16     9.05      9.00    -0.016616   \n",
       "2021-10-08     158.00      162.09     8.27      8.79     0.025886   \n",
       "2021-10-07     154.64      156.55     7.80      8.17     0.012351   \n",
       "...               ...         ...      ...       ...          ...   \n",
       "2021-01-08     227.06      240.25    19.16     19.61     0.058090   \n",
       "2021-01-07     207.71      207.89    18.61     18.82     0.000867   \n",
       "2021-01-06     212.78      203.97    18.49     18.61    -0.041404   \n",
       "2021-01-05     213.43      214.00    18.29     18.64     0.002671   \n",
       "2021-01-04     219.51      216.80    17.60     18.04    -0.012346   \n",
       "\n",
       "            zhangdie_iq  similarity  \n",
       "Date                                 \n",
       "2021-10-13     0.016199           1  \n",
       "2021-10-12     0.033595           0  \n",
       "2021-10-11    -0.005525           1  \n",
       "2021-10-08     0.062878           1  \n",
       "2021-10-07     0.047436           1  \n",
       "...                 ...         ...  \n",
       "2021-01-08     0.023486           1  \n",
       "2021-01-07     0.011284           1  \n",
       "2021-01-06     0.006490           0  \n",
       "2021-01-05     0.019136           1  \n",
       "2021-01-04     0.025000           0  \n",
       "\n",
       "[196 rows x 7 columns]"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 计算同涨同跌的信号——同时涨就是1，不同时涨就是0\n",
    "df_pick['similarity']=(df_pick['zhangdie_bd']*df_pick['zhangdie_iq']>0)*1\n",
    "# 虚拟变量，只定义一个就可以\n",
    "df_pick"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "19600f53-dddf-4b4e-8386-3f01db8fd629",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6938775510204082"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 计算同涨的信号百分比 两只股票同时涨跌可能有相关趋势\n",
    "result=df_pick['similarity'].sum()/len(df_pick)\n",
    "result\n",
    "# 两只股票同时涨的次数在总统计次数中所占比率相当高，故股票之间有关系"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f0b3c4e-d081-4108-9600-9ddf14917023",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93e404b5-7565-448d-8ca9-46cfe5c0a2d3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
