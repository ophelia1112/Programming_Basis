{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "86044a47-420b-45a0-ab6c-6542bd271992",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 广播\n",
    "# 即用于不同大小的数组的二元通用函数（加减乘等）的一组规则\n",
    "# 广播的规则：1、如果两个数组的维度数dim不同，小维度的数组的形状会在左边补1行\n",
    "# 2、如果shape的维度不匹配，但是有维度是1，可以拓展维度是1的维度匹配另一个数组,有1就能复制行或者列\n",
    "# 3、如果shape的维度不匹配，但是没有任何一个维度是1，匹配失败引发错误"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "154b41d4-8bac-49ff-aeb5-86953c371a24",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fa02e034-760f-4f63-a013-e4917d5c7778",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 二维数组加一维数组"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "aee2627a-0540-403a-8b25-b03c15f9185b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1., 1., 1.],\n",
       "       [1., 1., 1.]])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=np.ones((2,3))\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b3c341d0-59dc-43c9-b0c5-f42a7652f92d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b=np.arange(3)\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "59ccd0f1-825a-4e7d-9943-94703a26c82e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((2, 3), (3,))"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.shape,b.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "862c289c-856f-416a-bad7-f59ddfbc182f",
   "metadata": {},
   "outputs": [],
   "source": [
    "a的维度二行三列，b是三，从b入手变为一行三列（1，3），再变为二行三列，两行都是（0，1，2）"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f66eee83-29ed-4ade-9d8c-f07aff2002d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1., 2., 3.],\n",
       "       [1., 2., 3.]])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a+b # 实则一维数组按行加在二维数组"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "21e00a9e-9038-457b-990d-2e5a762b0e1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 广播匹配：将一维数组变为（1，3），又因为是全为1的单位矩阵，可以直接广播为（2，3）"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cce682dc-8ef3-45f6-99d9-9cb65e1a76f7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0629f0c1-8b84-4bbc-a85e-1859cd4b74e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 两个数组均需要广播"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b4c92e71-964b-4276-8ac1-ee3fed44f9a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0],\n",
       "       [1],\n",
       "       [2]])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=np.arange(3).reshape((3,1))\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d04ee2d1-0335-4fe1-98d2-7ffb5145705f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b=np.arange(3)\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6f9c58eb-3cb2-4fff-b0f6-326f76c7a935",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((3, 1), (3,))"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.shape,b.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "96738747-3a05-4823-9625-9c5de8e0f246",
   "metadata": {},
   "outputs": [],
   "source": [
    "# a为三行一列，（3，1），b为3，从一维维度小的开始，把b变为（1，3）一行三列，而为了匹配，变成3行，（3，3），直接复制三行\n",
    "# a为（3，1）三行一列，应变为三列，在左边加一行，复制列"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "469ce3f6-e707-4862-b01d-cf1a18e1f140",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 1, 2],\n",
       "       [1, 2, 3],\n",
       "       [2, 3, 4]])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a+b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ddb5300-6f98-4447-8e9c-aaca4dc2ed88",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b2ea4b6-40d8-4159-8b10-41a9815e6d4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 不匹配"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0383b898-dfc2-4b2d-b01f-569cbed6bfce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1., 1.],\n",
       "       [1., 1.],\n",
       "       [1., 1.]])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=np.ones((3,2))\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9705eb48-f66d-4432-bb46-a9f40588b7cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b=np.arange(3)\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ec489714-0eb1-4acd-a976-64f3d3813fe1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((3, 2), (3,))"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.shape,b.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0cef3d8a-225c-4d8d-a40e-95a0d91f6d26",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "operands could not be broadcast together with shapes (3,2) (3,) ",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[22], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43ma\u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43mb\u001b[49m\n",
      "\u001b[1;31mValueError\u001b[0m: operands could not be broadcast together with shapes (3,2) (3,) "
     ]
    }
   ],
   "source": [
    "a+b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "79557597-6702-4f7b-85a5-f1ad204abc50",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
