"""运算符"""
"""
用法：
+加 -减 *乘 /除 %取余 **次方 ++自增，对原值加一 --自减，对原值减一（自增自减用于编号）
自增自减时把前缀++放后面即先执行后输出，放前面是先输出后执行
可以用（）改变优先级
运算：加法有拼接意味，减法会将字符串数字化处理，无法进行数字化处理返回NaN；除法分母除以0会出现无穷infinity
NaN：即not a number,即非数字类型，但是NaN本身就是一个数字，表示数值不正常的状态，计算出错会出现，使用isNaN()检查参数是否非数字，是非数字返回true，不是非数字则返回false



math对象
计算函数 Math.参数
常用方法：
Math.abs() 求绝对值
Math.pow(a,b) 得到a的b次方
Math.round(a) 四舍五入不保留小数位
（保留小数位方法 console.log(数值).tpFixed(指定的保留小数的位数)）
Math.ceil(a) 向上取整，即获取大于等于a的最小整数
Math.floor(a) 向下取整，即获取小于等于a的最大整数
Math.random() 产生0-1的随机数
（如果想要1-100之间的整数，console.log(Math.floor/ceil(Math.random()*100+1))）
Math.max(a,b...) 求最大值
Math.min(a,b...) 求最小值
Math.PI 返回圆周率

关系运算符——比较运算，返回结果为布尔类型
> 大于
< 小于
>= 大于等于
<= 小于等于
== 等于，只判断数据内容
=== 全等于，判断数据内容加类型
!= 不等于，只判断数据内容
!== 不全等于，内容或者类型不一样则为不全等于

赋值运算符
= 简单赋值
在原来值基础上进行计算
+= 加法赋值
-= 减法赋值
*= 乘法赋值
/= 除法赋值
%= 求模赋值

逻辑运算符
&& 与，并且
|| 或
! 非，取反
逻辑中断，也称短路运算：
|| 第一个为真就返回第一个表达式，否则返回第二个表达式的值
! 第一个为假就返回第一个表达式
非空字符串，数字为true，取反为false
0，空字符串，undefined，NaN，null为false，取反是true

条件运算符
三目运算符，语法 条件？表达式1:表达式2 条件为true执行表达式1，条件为false执行表达式2

运算符优先级
小括号()>自增++，自减--，非｜>乘*，除/，取余%>加+，减->关系运算<，>，<=，>= >相等运算==，！= >逻辑里面的与&&>逻辑里面的或||>赋值运算=，+=
运算符较多时用小括号控制优先顺序

"""